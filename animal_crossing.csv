,repo,language,readme_contents
0,TuckingFypos/turnip-price-tracker,Python,"# Turnip Price Tracker
> A Discord bot for TheLeague4.0 that tracks members' Animal Crossing: New Horizons Turnip prices

The chatbot lives persistently on a networked Raspberry Pi 3 B+, and takes in user-submitted Turnip prices on a day-to-day basis. These prices are compared user to user, and the top price can be called so any member can see the best place to visit if they'd like to sell their Turnips for profit.  

The bot also has other miscellaneous Discord functionality, which can be triggered by users with the !command, and are all visible to you in the /cogs directory of this repo. 

## Installation

Required Dependences [Linux]:

Python 3.6+
```sh
$ sudo apt-get install python3.6
```

Discord.py:
```sh
python3 -m pip install -U discord.py
```

## Usage example

Submitting a Turnip Price:
```sh
!turnips <price>
```

Checking Turnip Prices:
```sh
!turnips
```

## Release History

* July 24, 2020
  * Implemented !Xur with the help of [@NotDisliked](https://twitter.com/NotDisliked), developer of [WhereTheFIsXur](https://www.wtfix.gg). 

* May 11, 2020
  * Implemented !rollNdN to roll a dice
  * Implemented a formatted embed for the !turnips price return
  * Implemented !quickpoll 

* April 22, 2020
  * Implemented Cogs
  * Fixed the Clear function (for real this time)
  * Fixed the Choose command

* April 19, 2020
  * Fixed the calculation for Sundays, buy days now seek out the lowest price
  * Somehow broke the Clear function again. Must investigate...
 

* April 13, 2020
  * Fixed timekeeping to reflect the Noon price reset
  * Fixed the Clear function thanks to some community help

* April 9, 2020
   * Added Issue Tracking to the repo
   * Added Sponsorship links to the top-bar

* April 8, 2020
    * Work in progress
    * Tracks basic Turnip Sale prices daily
    * No Sunday support for buying Turnips

## Meta

James D. ‚Äì [@TuckingFypos](https://twitter.com/tuckingfypos)

[![ko-fi](https://www.ko-fi.com/img/githubbutton_sm.svg)](https://ko-fi.com/Y8Y81LHJL)


## Contributing

1. Fork it (<https://github.com/tuckingfypos/turnip-price-tracker/fork>)
2. Create your feature branch (`git checkout -b feature/fooBar`)
3. Commit your changes (`git commit -am 'Add some fooBar'`)
4. Push to the branch (`git push origin feature/fooBar`)
5. Create a new Pull Request
"
1,HxBreak/AnimalCrossingTools-Android,Kotlin,"# Animal Crossing Tools - Android

## description

This is a tool helper player mark collected item in game and listening muisc, application 's some code can be reuseable in other project like network interactive, I'm separating it to shared module.

Project is using paging3, retrofit, hilt, okhttp, protobuf, navigation, Also this can help other people to know how to using morden android development skill.

## Intertive Preview

![](art/art1.gif)
![](art/art2.gif)

## requirement

flutter - newest dev version

## setup

`cd acnh_module && flutter pub get && cd ..`

`./gradlew assembleDebug`"
2,stellaw1/fellow-crossing,C++,"<p align=""center""> <img src=""https://imgur.com/d4drRso.png"" align=""center"" alt=""Logo"" width=""486"" height=""313""></p>

# Fellow Crossing
An Animal Crossing inspired game, designed to replicate office environments and encourage socialization between fellows


## Inspiration
The Major League Hacking Fellowship has been great, don't get us wrong. However, something we miss in our remote summer experience are the casual coffee breaks and candid conversations with coworkers. So, we decided to create a virtual experience to encourage unstructured socializing between fellows in an enjoyable, Animal Crossing inspired video game.  


## What it does
Fellow Crossing is a video game that encourages socialization between coworkers. It includes a coffee room with voice calling features, a music room with synchronized background music, and a personal office space with customizable furniture. These features were developed with the goal of encouraging small talk and mingling amongst fellows during their break times. 


## Tools used to build this project
 - [Godot game engine](https://godotengine.org/download/windows)
 - SQL database
 - AWS server
 - itch io
 - Photoshop
 - Adobe Illustrator
 - Python 
 - [Mumble](https://www.mumble.com/mumble-download.php)


## Instructions to play game

### Remote server
To play the multiplayer version of the game, please install the [Mumble client](https://www.mumble.com/mumble-download.php) at the default location. Then, head to [here](https://stellaw1.itch.io/fellow-crossing) to download an executable version of our game. Please download `windowsApp.exe` and `windows.App.pck` for Windows or `macApp.dmg.zip`  for Mac. Launch the executable and have fun!


### Local server [for debugging/ testing purposes]
##### Server
To start the server, open terminal and navigate to `fellow-crossing/godot-sqlite-1.7/Game/`. Then, run this command:

```
  /path/to/godot --path . --server
```

##### Client
Ensure the `IP` constant in the file `Client/Chat/ChatBox.gd` is set to ""127.0.0.1"". Open the `project.godot` file in `fellow-crossing/godot-sqlite-1.7/Game/` using the Godot game engine editor and play the project.


## License

This project is licensed under the MIT License - see the LICENSE.md file for details
"
3,mutoo/critterpedia-plus,JavaScript,"# Critterpedia-plus

An advanced critterpedia for Animal Crossing: New Horizons, helps you find new critters easily.

## Screenshots

The time traveling filters, allow you to inspect critters' availabilities now and then.

![Filters](./screenshots/filters.jpg)

Display the critters with game interface, helps you easily to finish your collection.

![Insect Grid](./screenshots/insects.jpg)

![Fish Grid](./screenshots/fish.jpg)

More details than in game view.

![Insect Detail](./screenshots/insect-detail.jpg)

![Fish Detail](./screenshots/fish-detail.jpg)

Shadow preview provides more intuitive idea what it looks like.

![Fish Shadow](./screenshots/fish-shadow.jpg)

Visit the live site for more fun here:
https://mutoo.github.io/critterpedia-plus/

## License

MIT

## Credits

This project is based on [react-boilerplate v5.0](https://github.com/react-boilerplate/react-boilerplate/pull/2815).

I also want to thank [ACNH API](http://acnhapi.com/), which provides a very easy way to access game data for this project.
"
4,seanpm2001/Mammal_Town,Python,
5,Maxzilla60/AC-Lister,TypeScript,"# Animal Crossing ‚òÖ Villager Lister
Easily search, view and assemble lists of your favorite Animal Crossing villagers!

### üëâ [**Visit it here!**](https://ac-lister.netlify.app/) üëà
[![Netlify Status](https://api.netlify.com/api/v1/badges/fd74c070-049b-43ef-b920-a28f989f7906/deploy-status)](https://app.netlify.com/sites/ac-lister/deploys)

## ‚≠ê Features
- üîé Easily search through all current villagers *(by name, species, and personality)*
- üìú Multiple custom lists
- üëÅ See species, personality, favorite coffee and birthday at a glance
- üíæ Browser remembers your lists even after a page refresh *(but not after hard refresh/clearing cache)*
- üìÅ Export and upload your lists from files
- üìÑ Save your lists as a simple text file

## üó≥ Feedback?
Please go **[here](https://github.com/Maxzilla60/AC-Lister/issues)** and let me know!

## üöß Work In Progress Board

If you're curious about upcoming/planned features and what's currently being worked on, check out the **[Trello board](https://trello.com/b/DD4k8ncM/ac-lister-20)**.

## üéØ Version 2.0 Goals

 - [x] Build the website with a simple web bundler, **[Parcel](https://parceljs.org)**.
 - [x] Refactor the JavaScript code to use a Model-View-Presenter architecture with **[TypeScript](https://www.typescriptlang.org)** and **[RxJS](https://rxjs-dev.firebaseapp.com)**.
 - [x] Implement integration tests with **[Cypress](https://www.cypress.io)**.
 - [x] Overhaul the CSS & HTML to make it mobile-friendly with **[CSS Grid](https://css-tricks.com/snippets/css/complete-guide-grid/)**.
 - [x] Host the website on **[Netlify](https://www.netlify.com/)**.
 - [ ] Convert the website into a **[PWA](https://developers.google.com/web/progressive-web-apps/)**.

## üå∑ Credits
- [Purple-Pixel](https://purple-pixel.tumblr.com/) for the wonderful profile art.
- [Here](http://kelseycrossing.com/post/149344517906/animal-crossing-pixel-masterpost) and [here](http://reguluscrossing.tumblr.com/post/153233705592/tried-to-edit-some-of-rehoeass-pixels-to-make) for the small villager icons.
- Special thanks to Lucy for helping me out with the villager information and images (`villagers.js`).
- [Font Awesome](http://fontawesome.io/) icons.
- [Real Favicon Generator](http://realfavicongenerator.net/).
- [Confetti](https://github.com/catdad/canvas-confetti) for the fun confetti!
- [Lozad](https://apoorv.pro/lozad.js/) for lazy loading of images.
- [HammerJS](https://hammerjs.github.io) for mobile gestures.
"
6,jamchamb/ac-nesrom-save-generator,Python,"# ac-nesrom-save-generator

## Setup

Use `pip` to install dependencies:

```
$ pip install -r requirements.txt
```

Then install the script with:

```
$ python setup.py install
```

You may want to use a [virtual environment](https://virtualenv.pypa.io/en/stable/) for this.

## ROM files

This tool can generate Animal Crossing save files that contain playable NES ROMs.
To create a new file, provide the name of the game, the path to the ROM image, and the path
to the output GCI file.

    $ ac-nesrom-gen ""Mega Man"" ""Mega Man (USA).szs"" mega_man_nes.gci
    Need 12 blocks to contain ROM GCI
    Checksum: 0x00973e8e
    Check byte: 0x72

The ROM image can optionally be compressed in ""Yaz0"" (""szs"") format using a tool
like wszstools.

Use a memory card manager to import the GCI file to a memory card, and then use
the ""NES Console"" item to play the ROM.

If you're playing on Dolphin, disable anti-aliasing when playing NES games to
get a better picture.

## Patcher files

This tool can also be used to generate NES ROM files that contain patch tags. These
tags can be used to patch code and data in memory.

Example usage of the patch options:

    $ ac-nesrom-gen ""Zuru2 Patch"" /dev/null zuru_mode_2.gci -p 80206F9c 0000007D

Each `-p`/`--patch` option inserts a small ROM tag patch (251 bytes or less) within
the address range `0x80000000` - `0x807FFFFF`.

Larger patches, including code patches, can be inserted into the ROM data section.
Use the `--loader` option to insert a patch loader that automatically loads big patches
from the ROM data section, and supply the path to a patch file where the ROM file path
would normally go.

    $ ac-nesrom-gen --loader ""printf"" printf_c.patch printf_c.gci

If a patch only needs to run once upon loading, the `--autoheader` option
can be used to generate a header for it automatically. It takes the load address
of the patch as an argument.

    $ ac-nesrom-gen --loader --autoheader 80002000 ""Test"" test.patch test.gci

See the [ac-patch-loader](https://github.com/jamchamb/ac-patch-loader) repo
for patch format and calling conventions.

## Big patch generator

YAML files describing a series of big patches and settings can be used to generate
the big patch section content automatically.

This example includes two patches. It uses a hex string to overwrite one instruction
at `0x80404E24`, and then loads a larger patch from the file `debug_printf_c.patch`
to be inserted at `0x80002000`.

```yaml
settings:
    jut_console: false

patches:
  - target: 0x80404E24
    bytes: '4BBFD1DD'

  - target: 0x80002000
    file: debug_printf_c.patch
```

This example inserts a patch that will be called immediately after
it's loaded to `0x80002000`. It also enables the in-game debug console
without requiring zuru mode to be enabled.

```yaml
settings:
  jut_console: true

patches:
  - target: 0x80002000
    file: hello_osreport_c.patch
    flags:
      jump: true
```
"
7,HarrisonXi/AnimalCrossingFlower,Python,"# „ÄäÂä®Áâ©Ê£ÆÂèã‰ºö„ÄãËìùÁé´Áë∞Ëä±ÂçâÊùÇ‰∫§Êó†Ê≠ß‰πâ‰ºòÂåñÊñπÊ°à

### ÂºïÁî®ËµÑÊñô

GoogleÊñáÊ°£Ôºö

[Ëä±ÂçâÊùÇ‰∫§ÊåáÂçóÔºöAnimal Crossing Flower Genetics Guide](https://docs.google.com/document/d/1ARIQCUc5YVEd01D7jtJT9EEJF45m07NXhAm4fOpNvCs)

[Ëä±ÂçâÂü∫Âõ†Ë°®Áé∞Ë°®Ê†ºÔºöACNH/ACNL Flower Flags](https://docs.google.com/spreadsheets/d/11pRCX8G0xGizSYWgVhoUSu7pE-MV7AOprBcgSY1whB4)

ÂæÆÂçöÂ§ß‰Ω¨[Èòø‰∏ò‰∏ç‰∏•ËÇÉ](https://www.weibo.com/u/1949050703)ÁøªËØëÁöÑËØëÊñáÔºö

[ÂÖ®Ëä±ÊúµÂü∫Âõ†ÂûãÂèäÊùÇ‰∫§ÂéüÁêÜÂèÇËÄÉÔºàÁºñËØëÔºâ](https://www.weibo.com/ttarticle/p/show?id=2309404493225317499148)

‰∏ä‰∏ÄÁØáÊñáÁ´†Ôºö

[„ÄäÂä®Áâ©Ê£ÆÂèã‰ºö„ÄãËìùÁé´Áë∞Ëä±ÂçâÊùÇ‰∫§Êó†Ê≠ß‰πâÊñπÊ°à](https://github.com/HarrisonXi/AnimalCrossingFlower/blob/master/readme_old.md)

### ÂâçË®Ä

Ââç‰∏ÄÁØáÊñáÁ´†ÁªôÂ§ßÂÆ∂‰ªãÁªç‰∫ÜÊó†Ê≠ß‰πâÊñπÊ°àÔºå‰ΩÜÊòØÂõ†‰∏∫Ê¶ÇÁéáÂ§™‰ΩéÊ≤°Êúâ‰ªÄ‰πàÂçµÁî®ÔºåÊâÄ‰ª•‰ªäÂ§©Ë¶ÅÂÅöÁöÑÂ∞±ÊòØ‰ºòÂåñËøô‰∏™ÊñπÊ°à„ÄÇÂÖ≥‰∫é‰ªÄ‰πàÊòØÊó†Ê≠ß‰πâÊñπÊ°àÔºåËØ∑Áúã‰∏ä‰∏ÄÁØáÔºÅ

### Âè¶‰∏ÄÁßçÊó†Ê≠ß‰πâÁöÑÂèØËÉΩÊÄß

Ââç‰∏ÄÁØáÊñáÁ´†ÊàëËßâÂæóÂêå‰∏ÄÁßçËä±Ëâ≤Âá∫Áé∞‰∏§‰∏™Âü∫Âõ†ÂûãÔºåÂ∞±‰ºöÈöæ‰ª•Âà§Êñ≠Ê≠ß‰πâ„ÄÇ‰ΩÜÊòØÁé∞Âú®ÊàëËßâÂæó‰∏çÂÆåÂÖ®ÊòØËøôÊ†∑ÔºåÁ±ª‰ºº‰∫é‰∏ä‰∏ÄÁØáÊñáÁ´†ÈáåÊèêÂà∞ÁöÑ‰æãÂ≠ê‰∏≠Ôºå‰∏§ÁßçÁ¥´Ëâ≤Â∞±ÊòØÂèØ‰ª•Âå∫ÂàÜÁöÑÔºö

![old.png](https://github.com/HarrisonXi/AnimalCrossingFlower/raw/master/old.png)

ÊâÄ‰ª•ÊàëÊîπËâØ‰∫ÜÁÆóÊ≥ïÔºåÂ¶ÇÊûúÊùÇ‰∫§ÁªìÊûú‰∏≠ÂêåÈ¢úËâ≤ÁöÑËä±Âá∫Áé∞‰∫Ü**‰∏§Áßç**Âü∫Âõ†ÂûãÔºåÈÇ£‰πàÊàë‰ºöÊää‰∏§ÁßçËä±ÈÉΩÂíå‰∏âËâ≤ÂéüÂßãÁßçÂ≠êËä±ÊùÇ‰∫§‰∏Ä‰∏ãÔºåÁî®‰ª•Âà§Êñ≠Ëøô‰∏™Âü∫Âõ†ÂûãÊòØ‰∏çÊòØÂèØÊ∂àÊ≠ß‰πâÁöÑ„ÄÇÁî®‰∏äÂõæ‰∏≠ÁöÑ‰æãÂ≠êÊù•ËØ¥ÔºårryywwssÂíåÈªÑËâ≤ÂéüÂßãÁßçÂ≠êËä±ÊùÇ‰∫§Âè™ËÉΩÂá∫ÁôΩËâ≤ÔºåËÄårrYywwssÂíåÈªÑËâ≤ÂéüÂßãÁßçÂ≠êËä±ÊùÇ‰∫§ÊòØËÉΩÈ¢ùÂ§ñÂá∫Áé∞ÈªÑËâ≤ÁöÑ„ÄÇ‰∏ÄÊó¶ËÉΩÂá∫ÈªÑËâ≤ÔºåÂÆÉÂ∞±‰∏ÄÂÆöÊòØrrYywwssÂü∫Âõ†ÂûãÔºåÊâÄ‰ª•ËøôÈáåÊàëÂ∞±‰ºöËÆ§ÂÆörrYywwss‰πüÊòØÊó†Ê≠ß‰πâÁöÑ„ÄÇÔºàËøô‰∏™ÁÆóÊ≥ïÂÜôËµ∑Êù•ÊúâÁÇπÁÉ¶ÔºåÊàëÊâøËÆ§Á¨¨‰∏ÄÁâàÊòØÂõ†‰∏∫ÊàëÊáíÊâÄ‰ª•Ê≤°Â•ΩÂ•ΩÂÆûÁé∞Ëøô‰∏™„ÄÇÔºâ

### ÂâîÈô§‰ΩéÊ¶ÇÁéáÂ§™Âπ∂Â¢ûÂä†ËΩÆÊï∞

Á¥ßÊé•ÁùÄÊàëÂ∞ùËØï‰∫ÜÂâîÈô§‰ΩéÊ¶ÇÁéáÁöÑÁªìÊûúÂπ∂Â¢ûÂä†ÁöÑÊùÇ‰∫§ÁöÑËΩÆÊï∞ÔºåÂõ†‰∏∫ËøôÊ†∑ÂÅöÂèØ‰ª•ÂØπÂü∫Âõ†ËøõË°åÊèêÁ∫Ø„ÄÇRrYyWwssÂ¶ÇÊûúËÉΩÊ∏êÊ∏êÂèòÊàêRrYywwss‰πãÁ±ªÁöÑÔºåÈÇ£ËÇØÂÆöÊòØÊûÅÂ•ΩÁöÑ„ÄÇ

ÁÆóÊ≥ï‰ºòÂåñÂà∞ËøôÈáå‰πãÂêéÔºåÂ∑Æ‰∏çÂ§ö4Ëá≥6ËΩÆÊùÇ‰∫§Ôºà‰∏çÂê´Ê∂àÊ≠ß‰πâÊ≠•È™§ÔºâÂêéÔºåÂ∞±ËÉΩÂæóÂà∞‰∏Ä‰∫õÊØîËæÉÂ•ΩÁöÑÂü∫Âõ†ÂûãÁî®Êù•ÂüπËÇ≤ËìùÁé´Áë∞‰∫ÜÔºàÂÆåÊï¥ÁªìÊûúÔºö[output2.txt](https://github.com/HarrisonXi/AnimalCrossingFlower/blob/master/output2.txt)ÔºâÔºö

```
RRYywwss(Èªë) + RRYywwss(Èªë) = RRYYwwss(Ëìù) 25.0%
RRYywwss(Èªë) + RrYYwwss(Á∫¢) = RRYYwwss(Ëìù) 25.0%
RRYywwss(Èªë) + RRYYwwSs(Á∫¢) = RRYYwwss(Ëìù) 25.0%
RRYywwss(Èªë) + RRYYWwss(Ê©ô) = RRYYwwss(Ëìù) 25.0%
RrYYwwss(Á∫¢) + RrYYwwss(Á∫¢) = RRYYwwss(Ëìù) 25.0%
RrYYwwss(Á∫¢) + RRYYwwSs(Á∫¢) = RRYYwwss(Ëìù) 25.0%
RrYYwwss(Á∫¢) + RRYYWwss(Ê©ô) = RRYYwwss(Ëìù) 25.0%
RRYYwwSs(Á∫¢) + RRYYwwSs(Á∫¢) = RRYYwwss(Ëìù) 25.0%
RRYYwwSs(Á∫¢) + RRYYWwss(Ê©ô) = RRYYwwss(Ëìù) 25.0%
RRYYWwss(Ê©ô) + RRYYWwss(Ê©ô) = RRYYwwss(Ëìù) 25.0%
```

### ËÆ°ÁÆóÁßçÂ≠êÂæóÂàÜ

‰ΩÜÊòØÁúã‰∏ÄÈÅçÂÆåÊï¥ÁªìÊûúÂ∞±‰ºöÂèëÁé∞Ëå´Ëå´Ëä±Êµ∑ÔºåË¶ÅÊâæ‰∏™ÊúÄ‰ºòÁöÑÊùÇ‰∫§Ë∑ØÁ∫ø‰∏çÂÆπÊòì„ÄÇÊúâ‰∫õÁªìÊûú‰ºö‰ΩøÂæóÂü∫Âõ†Á∫ØÂ∫¶Ë∂äÊù•Ë∂ä‰ΩéÔºåÁ±ª‰ººRrYyWwSsËøôÁßçÂä®‰∏çÂä®Â∞±ËÉΩÊùÇ‰∫§Âá∫ÂçÅÂá†ÁßçÂü∫Âõ†ÂûãÔºåÊâÄ‰ª•‰πüÂ∫îËØ•‰ªéÊµÅÁ®ãÈáåÁõ¥Êé•ÂâîÈô§ÊéâÂÆÉ‰ª¨„ÄÇ‰∏∫‰∫ÜËøõ‰∏ÄÊ≠•‰ºòÂåñÔºåÊàëÁªôÁßçÂ≠êÊñ∞Â¢û‰∫ÜËØÑÂàÜÁ≥ªÁªü„ÄÇÊØîÂ¶ÇÁ∫¢Ëâ≤Êàë‰ª¨ÊúüÊúõÁöÑÂü∫Âõ†ÂûãÊòØRRÔºåÈÇ£‰πàRRËÆ°3ÂàÜÔºåRrËÆ°2ÂàÜÔºårrËÆ°0ÂàÜÔºàÂÖ≥‰∫é‰∏∫‰ªÄ‰πàËøô‰πàËÆ°ÂàÜÂ∞±‰∏çÂ±ïÂºÄËØ¥‰∫ÜÔºâ„ÄÇËøôÊ†∑Êàë‰ª¨ÂØπÂõõÁªÑÂü∫Âõ†ÂÅöÂÆåËØÑÂàÜÔºå‰∏âËâ≤ÁöÑÂéüÂßãÁßçÂ≠êËøòÊúâËìùÁé´Áë∞ÁöÑÂü∫Âõ†ÂûãÂæóÂàÜÂ∞±ÊòØÔºö

```
rryyWwss(ÁôΩ) = 5ÂàÜ
rrYYWWss(ÈªÑ) = 6ÂàÜ
RRyyWWSs(Á∫¢) = 5ÂàÜ
RRYYwwss(Ëìù) = 12ÂàÜ
```

ÊØèÊ¨°ÊùÇ‰∫§ÂÆåÂæóÂà∞Êñ∞ÁöÑÁªìÊûúÔºåÊàë‰ª¨‰∏ç‰ªÖË¶ÅÈÄâÊã©Êó†Ê≠ß‰πâÁöÑÔºåËøòË¶ÅÊúüÊúõÂæóÂàÜÊõ¥È´òÁöÑÁªìÊûúÔºåÊù•‰øùËØÅÂü∫Âõ†ÂûãË∂äÊù•Ë∂äË∂ãËøë‰∫éËìùÁé´Áë∞„ÄÇ

### ÁªìËÆ∫

ÂÜçÊ¨°ÊîπËøõÂêéÁöÑÁÆóÊ≥ïÔºàÊ∫ê‰ª£Á†ÅÔºö[flower.py](https://github.com/HarrisonXi/AnimalCrossingFlower/blob/master/flower.py)ÔºâÔºåËøêË°å‰∏Ä‰∏ãÂ∞±ÂèØ‰ª•ÂæóÂà∞ÁªìÊûúÔºö[output3.txt](https://github.com/HarrisonXi/AnimalCrossingFlower/blob/master/output3.txt)„ÄÇÂèØ‰ª•ÁúãÂà∞Â∑≤ÁªèÂæàÁÆÄÁü≠‰∫ÜÔºå‰ªéËøôÈáåÈù¢ÂâîÈô§‰∏Ä‰∫õÊ≤°Áî®‰∏äÁöÑË∑ØÁ∫øÂæóÂà∞‰∏ãÈù¢ÁöÑÁªìÊûúÔºåÂ∞±ÂèØ‰ª•ÊåâÁÖßËøô‰∏™Ë∑ØÁ∫øÂ∞ùËØïËøõË°åÂüπËÇ≤Âï¶„ÄÇ

```
**** Á¨¨1ËΩÆ ****
rryyWwss(ÁôΩ) + rryyWwss(ÁôΩ) = rryywwss(Á¥´) 25.0%(6)
rryyWwss(ÁôΩ) + rrYYWWss(ÈªÑ) = rrYyWwss(ÁôΩ) 50.0%(7)
rryyWwss(ÁôΩ) + RRyyWWSs(Á∫¢) = RryyWwss(Á∫¢) 25.0% Ê≠ß(7)
rrYYWWss(ÈªÑ) + RRyyWWSs(Á∫¢) = RrYyWWss(Ê©ô) 50.0%(7)
RRyyWWSs(Á∫¢) + RRyyWWSs(Á∫¢) = RRyyWWss(Èªë) 25.0%(6)
**** Á¨¨2ËΩÆ ****
rryyWwss(ÁôΩ) + rrYyWwss(ÁôΩ) = rrYywwss(Á¥´) 12.5% Ê≠ß(8)
RRyyWWSs(Á∫¢) + RryyWwss(Á∫¢) = RRyyWwss(Èªë) 12.5% Ê≠ß(8)
rryywwss(Á¥´) + rrYyWwss(ÁôΩ) = rrYywwss(Á¥´) 25.0% Ê≠ß(8)
rrYyWwss(ÁôΩ) + rrYyWwss(ÁôΩ) = rrYywwss(Á¥´) 12.5% Ê≠ß(8)
RryyWwss(Á∫¢) + RRyyWWss(Èªë) = RRyyWwss(Èªë) 25.0% Ê≠ß(8)
**** Á¨¨3ËΩÆ ****
rrYYWWss(ÈªÑ) + rrYywwss(Á¥´) = rrYYWwss(ÈªÑ) 50.0%(8)
rrYyWwss(ÁôΩ) + rrYywwss(Á¥´) = rrYYWwss(ÈªÑ) 12.5%(8)
RrYyWWss(Ê©ô) + rrYywwss(Á¥´) = rrYYWwss(ÈªÑ) 12.5%(8)
RrYyWWss(Ê©ô) + rrYywwss(Á¥´) = RrYYWwss(Ê©ô) 12.5%(10)
rrYywwss(Á¥´) + rrYywwss(Á¥´) = rrYYwwss(ÁôΩ) 25.0%(9)
**** Á¨¨4ËΩÆ ****
RRyyWwss(Èªë) + RrYYWwss(Ê©ô) = RRYywwss(Èªë) 12.5%(11)
rrYYWwss(ÈªÑ) + RrYYWwss(Ê©ô) = RrYYwwss(Á∫¢) 12.5%(11)
RrYYWwss(Ê©ô) + RrYYWwss(Ê©ô) = RrYYwwss(Á∫¢) 12.5%(11)
RrYYWwss(Ê©ô) + rrYYwwss(ÁôΩ) = RrYYwwss(Á∫¢) 25.0%(11)
**** ÁªìÊûú ****
RRYywwss(Èªë) + RRYywwss(Èªë) = RRYYwwss(Ëìù) 25.0%
RRYywwss(Èªë) + RrYYwwss(Á∫¢) = RRYYwwss(Ëìù) 25.0%
RrYYwwss(Á∫¢) + RrYYwwss(Á∫¢) = RRYYwwss(Ëìù) 25.0%
```

Ê≥®ÔºöÊú´Â∞æÂê´Êúâ‚ÄúÊ≠ß‚ÄùÂ≠óÁöÑÂ∞±ÊòØÈúÄË¶Å‰∫åÊ¨°ÊùÇ‰∫§È™åËØÅ‰∏ãÊ∂àÊ≠ß‰πâ„ÄÇ

Êï¥ÁêÜ‰∏ãÁõÆÂâçÁÆóÂá∫Êù•ËæÉ‰ºòÁöÑÂÆåÊï¥ÊùÇ‰∫§Ê≠•È™§Ôºö

```
1. rryyWwss(ÁôΩÁßçÂ≠ê) + rrYYWWss(ÈªÑÁßçÂ≠ê) = rrYyWwss(ÁôΩ1) 50.0%
2. Á¨¨‰∏ÄÊ≠•ÈáåÁöÑÁôΩËâ≤Ëä±ÂíåÁôΩÁßçÂ≠êËä±ÊùÇ‰∫§ÔºåÂèØËÉΩ‰ºöÂæóÂá∫‰∏§ÁßçÁ¥´Ëâ≤Ôºö
   rryyWwss(ÁôΩÁßçÂ≠ê) + rrYyWwss(ÁôΩ1) = rryywwss(Á¥´2A) 12.5%
   rryyWwss(ÁôΩÁßçÂ≠ê) + rrYyWwss(ÁôΩ1) = rrYywwss(Á¥´2B) 12.5%
3. Â∞ÜÂüπËÇ≤Âá∫Êù•ÁöÑÁ¥´Ëâ≤ÈÉΩÂíåÈªÑÁßçÂ≠êËä±ÊùÇ‰∫§ÔºåÂèØËÉΩÂæóÂá∫‰ª•‰∏ãÁªìÊûúÔºö
   rrYYWWss(ÈªÑÁßçÂ≠ê) + rryywwss(Á¥´2A) = rrYyWwss(ÁôΩ1) 100.0%
   rrYYWWss(ÈªÑÁßçÂ≠ê) + rrYywwss(Á¥´2B) = rrYyWwss(ÁôΩ1) 50.0%
   rrYYWWss(ÈªÑÁßçÂ≠ê) + rrYywwss(Á¥´2B) = rrYYWwss(ÈªÑ3) 50.0%
   Ê≥®ÊÑèËøôÈáå‰∫ßÁîüÁöÑÁôΩËâ≤ÈÉΩÊòØÂíåÁ¨¨‰∏ÄÊ≠•ÁöÑÁôΩËâ≤ÊòØ‰∏ÄÊ†∑ÁöÑÂü∫Âõ†ÂûãÔºåÂèØ‰ª•ÈáçÂ§çÂà©Áî®„ÄÇ
   ‰∏ÄÊó¶‰∫ßÂá∫‰∫ÜÈªÑËâ≤Ëä±ÔºåÈÇ£‰πàËøô‰∏™Á¥´Ëâ≤Ëä±Â∞±ÊòØrrYywwss(Á¥´2B)Âü∫Âõ†ÂûãÔºåËøô‰∏™ÈªÑËâ≤Ëä±ÂêéÈù¢Ëøò‰ºöÁî®Âà∞Ôºå‰∏çË¶Å‰∏¢„ÄÇ
4. RRyyWWSs(Á∫¢ÁßçÂ≠ê) + rrYYWWss(ÈªÑÁßçÂ≠ê) = RrYyWWss(Ê©ô4) 50.0%
5. RrYyWWss(Ê©ô4) + rrYywwss(Á¥´2B) = rrYYWwss(ÈªÑ3) 12.5%
   RrYyWWss(Ê©ô4) + rrYywwss(Á¥´2B) = RrYYWwss(Ê©ô5) 12.5%
   Ëøô‰∏§‰∏™ÈÉΩÊòØÊó†Ê≠ß‰πâÁöÑÁªìÊûú„ÄÇ
6-1. ËøôÈáåÂæóÂà∞ÁöÑÂ§ö‰∏™RrYYWwss(Ê©ô5)Áõ∏‰∫íÊùÇ‰∫§ÔºåÂ∑≤ÁªèÊúâ6.2%ÁöÑÊ¶ÇÁéáÂá∫ËìùËâ≤‰∫Ü„ÄÇÊ≤°ÊúâÂá∫ËìùËâ≤ÁöÑËØùÔºåËøòÊúâÊå∫Â§ßÊ¶ÇÁéáÂá∫Áé∞Èòø‰∏òÊñáÁ´†ÈáåÊèêÂà∞ÁöÑ‰∫å‰ª£Á∫¢Ôºö
   RrYYWwss(Ê©ô5) + RrYYWwss(Ê©ô5) = RrYYwwss(‰∫å‰ª£Á∫¢) 12.5%
   RrYYWwss(Ê©ô5) + RrYYWwss(Ê©ô5) = RRYYwwss(Ëìù) 6.2%
   ‰∏äÈù¢ÁöÑÁªìÊûúÈÉΩÊòØÊó†Ê≠ß‰πâÁöÑ„ÄÇ‰∏çËøá‰∏çÊòØÂæàÊé®ËçêËøô‰∏™ÊñπÊ°àÔºåÂõ†‰∏∫ÂêéÈù¢ÁöÑÊñπÊ°àÂèØ‰ª•ÊåÅÁª≠‰ºòÂåñÊ¶ÇÁéá„ÄÇ
6-2. ÊääRrYYWwss(Ê©ô5)Âíå‰πãÂâçÁöÑrrYYWwss(ÈªÑ3)ËøõË°åÊùÇ‰∫§Ôºö
   RrYYWwss(Ê©ô5) + rrYYWwss(ÈªÑ3) = rrYYwwss(ÁôΩ6) 12.5%
   RrYYWwss(Ê©ô5) + rrYYWwss(ÈªÑ3) = RrYYwwss(‰∫å‰ª£Á∫¢) 12.5%
   ‰∏äÈù¢ÁöÑÁªìÊûúÈÉΩÊòØÊó†Ê≠ß‰πâÁöÑ„ÄÇËøô‰∏™rrYYwwss(ÁôΩ6)Â¶ÇÊûúÂüπËÇ≤Âá∫Êù•Ôºå‰πüÊòØÊúâÁî®ÁöÑ„ÄÇ
6-3. Â¶ÇÊûúÂæóÂà∞‰∫ÜrrYYwwss(ÁôΩ6)Ôºå‰ºòÂÖàÊãøÂÆÉÂíåRrYYWwss(Ê©ô5)ÊùÇ‰∫§Ôºö
   RrYYWwss(Ê©ô5) + rrYYwwss(ÁôΩ6) = rrYYWwss(ÈªÑ3) 25.0%
   RrYYWwss(Ê©ô5) + rrYYwwss(ÁôΩ6) = rrYYwwss(ÁôΩ6) 25.0%
   RrYYWwss(Ê©ô5) + rrYYwwss(ÁôΩ6) = RrYYWwss(Ê©ô5) 25.0%
   RrYYWwss(Ê©ô5) + rrYYwwss(ÁôΩ6) = RrYYwwss(‰∫å‰ª£Á∫¢) 25.0%
   Áõ∏‰ø°‰Ω†‰πüÂèëÁé∞‰∫ÜÔºåÂá∫Áé∞ÁöÑ4ÁßçÁªìÊûúÈÉΩÊòØÊúâÁî®ÁöÑ„ÄÇ
7. RrYYwwss(‰∫å‰ª£Á∫¢) + RrYYwwss(‰∫å‰ª£Á∫¢) = RRYYwwss(Ëìù) 25.0%
   RrYYwwss(‰∫å‰ª£Á∫¢) + RrYYwwss(‰∫å‰ª£Á∫¢) = rrYYwwss(ÁôΩ6) 25.0%
   RrYYwwss(‰∫å‰ª£Á∫¢) + RrYYwwss(‰∫å‰ª£Á∫¢) = RrYYwwss(‰∫å‰ª£Á∫¢) 50.0%
8. ‰∏∫‰ªÄ‰πàËøòÊúâÊ≠•È™§8ÔºüÂìàÂìàÂìàÔºå‰∏çË¶ÅÂ•áÊÄ™ÔºåÂÆåÂñÑÁöÑÂüπËÇ≤ÊñπÊ°àÂèØ‰∏ç‰ºöÊïô‰Ω†Âè™ÂüπËÇ≤‰∏ÄÊúµËìùÁé´Áë∞„ÄÇÊääËìùÁé´Áë∞Âíå‰∫å‰ª£Á∫¢Áßç‰∏ÄËµ∑ÔºåÂèØ‰ª•ÊèêÈ´òÂüπËÇ≤Êõ¥Â§öËìùÁé´Áë∞ÁöÑÊïàÁéáÔºö
   RrYYwwss(‰∫å‰ª£Á∫¢) + RRYYwwss(Ëìù) = RrYYwwss(‰∫å‰ª£Á∫¢) 50.0%
   RrYYwwss(‰∫å‰ª£Á∫¢) + RRYYwwss(Ëìù) = RRYYwwss(Ëìù) 50.0%
```

### ÂÖ≥‰∫éÁ¨¨‰∏ÄÁØáÊñáÁ´†‰∏≠ÁöÑ‰∫å‰ª£Á∫¢

ÊîπËøõ‰∫ÜÊñ∞ÁÆóÊ≥ïÂêéÔºåÂèëÁé∞‰∏§Ê≠•Â∞±ËÉΩÂüπËÇ≤Âá∫Á¨¨‰∏ÄÁØáÊñáÁ´†‰∏≠ÁöÑ‰∫å‰ª£Á∫¢RrYyWwssÔºå‰∏çÊÉ≥ÊäòËÖæÈÇ£‰πàÂ§öÂ§çÊùÇÊ≠•È™§ÔºåÂèØ‰ª•Áî®Ëøô‰∏™Âü∫Âõ†ÂûãÊêûËä±Êµ∑ÊàòÊúØ„ÄÇÂΩìÁÑ∂ÊàëÂè™ÊòØÁûéÊâØÁöÑÔºåÂõ†‰∏∫‰∏ä‰∏ÄÁØáÂ∞±ËØ¥‰∫ÜÊ¶ÇÁéáÂ§™‰ΩéÂØºËá¥Âá†‰πéÊ≤°ÊúâdioÁî®„ÄÇ

![red.png](https://github.com/HarrisonXi/AnimalCrossingFlower/raw/master/red.png)"
8,NWPlayer123/AnimalCrossing,C,"# Animal Crossing for Nintendo GameCube

This repository is basically just a save-my-files-in-case-my-hard-drive-dies and to show people my suffering.

Expect more Sometime In The Future‚Ñ¢.
"
9,dragos240/Pocket-NLSE,C,"# Pocket-NLSE
A portable save editor for Animal Crossing: New Leaf on the Nintendo 3DS

##Back up your shit
Make sure you make backups of your save file in case you do something stupid or Pocket-NLSE fucks up (in which case please report that bug in the issues section).

##Suggestions
Suggestions are more than welcome. Please use the issues section for this.
"
10,SeunghoShin93/Animal-Crossing-Finder-Crawler-,Python,"# Animal Crossing Finder (Crawler)

## ÌîÑÎ°úÏ†ùÌä∏ ÏÜåÍ∞ú

ÎãåÌÖêÎèÑ Ïä§ÏúÑÏπò ÎèôÎ¨ºÏùò Ïà≤ ÏóêÎîîÏÖòÏùÑ ÌååÎäî ÏáºÌïëÎ™∞ÏùÑ ÌÅ¨Î°§ÎßÅÌïòÏó¨ Ïû¨Í≥† Ïó¨Î∂ÄÎ•º ÏïåÎ†§Ï§çÎãàÎã§.



## Í∞úÎ∞ú Î∞∞Í≤Ω

## ÎãåÌÖêÎèÑ Ïä§ÏúÑÏπò ÎèôÎ¨ºÏùò Ïà≤ ÏóêÎîîÏÖòÏù¥ Í∞ñÍ≥† Ïã∂ÏóàÎã§. 

Í∑∏Îü¨ÎÇò ÏàòÏöîÏóê ÎπÑÌï¥ ÌÑ∞Î¨¥Îãà Î∂ÄÏ°±Ìïú Í≥µÍ∏âÏóê, Ï†ïÌï¥ÏßÑ ÏãúÍ∞ÑÏóê Î¨ºÎüâÏùÑ Ìë∏Îäî Ïò§Ìîà ÎßàÏºìÏùÄ ÎåÄÍ∏∞ÏûêÍ∞Ä ÎÑàÎ¨¥ ÎßéÎã§.

Í≤åÎ¶¥Îùº ÏÑ±ÏúºÎ°ú Í∞ëÏûêÍ∏∞ Î¨ºÍ±¥ÏùÑ Ìë∏Îäî ÏÇ¨Ïù¥Ìä∏Ïóê Í∏∞ÎåÄÌï¥ÏïºÌïòÎäî ÏÉÅÌô©Ïù¥ÏßÄÎßå,

ÌïòÎ£®Ï¢ÖÏùº ÏÉàÎ°úÍ≥†Ïπ®Îßå ÎàÑÎ•¥Í≥† ÏûàÏùÑ Ïàú ÏóÜÎäî ÎÖ∏Î¶áÏù¥Í∏∞Ïóê ÏßÅÏ†ë ÏÇ¨Ïö©ÌïòÍ∏∞ ÏúÑÌï¥ Í∞úÎ∞úÌñàÎã§.



## Getting Started

- pip upgrade

- pip install -r requirements.txt

- ÏÇ¨Ïö©ÌïòÎäî chrome Î≤ÑÏ†ÑÏóê ÎßûÏ∂∞ chromedriver Îã§Ïö¥Î°úÎìú - https://chromedriver.chromium.org/downloads

- `ds_finder.py`  Ïùò  `chrome_path` Î•º Î≥∏Ïù∏ Ïª¥Ìì®ÌÑ∞Ïùò `chromedriver.exe` Í≤ΩÎ°ú ÏàòÏ†ï 
  (default: `""C:/Download/chromedriver_win32/chromedriver.exe""`)

- `python ds_finder.py`  Î°ú Ïã§Ìñâ

  

## Í∏∞Ïà† Ïä§ÌÉù

- Selenium.webdriver
- pygame (ÏïåÎ¶ºÏùå)



## ÎèôÏûë ÏõêÎ¶¨

- `python ds_finder.py` Î°ú Ïã§Ìñâ

- ÏÇ¨Ïù¥Ìä∏Î•º ÌÅ¨Î°¨ÏúºÎ°ú render ÌõÑ Ïû¨Í≥† ÌíàÏ†à Ïó¨Î∂ÄÎ•º Í≤∞Ï†ïÏßìÎäî webelement ÏöîÏÜå Ï∫êÏπò
  - pygameÏúºÎ°ú ÏùåÏïÖÏùÑ Ïû¨ÏÉùÌïòÏó¨ ÏÇ¨Ïö©ÏûêÏóêÍ≤å Íµ¨Îß§ Í∞ÄÎä• Ïó¨Î∂ÄÎ•º ÏïåÎ¶∞Îã§. (default music: ÏÇ¨Ïù¥Î†å)
  - Ïû¨Í≥† Î∞úÏÉù Ïãú : ÌÑ∞ÎØ∏ÎÑêÏóê ÏÇ¨Ïù¥Ìä∏ print
  - Ìï¥Îãπ ÎèÑÎ©îÏù∏Ïùò ÌÅ¨Î°¨ Ï∞ΩÏù¥ ÏºúÏßê
  
- `ctrl+c` Î™ÖÎ†πÏñ¥Î°ú ÎÅÑÏßÄ ÏïäÎäî Ïù¥ÏÉÅ ÏÉÅÍ∏∞ Í≥ºÏ†ï Î∞òÎ≥µÌï©ÎãàÎã§.

- Î†åÎçîÎßÅ ÏóêÎü¨ Ïãú Í≤ΩÏ†ÅÏùå Ïû¨ÏÉù (Ìã∞Î™¨ÏóêÏÑú ÏûêÏ£º Î∞úÏÉù)

  

## ÏßÄÏõêÌïòÎäî ÏÇ¨Ïù¥Ìä∏ Î™©Î°ù 



- `ÏÜåÌîÑÎùºÎÖ∏`

- `Ï°∞Ïù¥Ìä∏Î°† Ïä§ÌÜ†Ïñ¥ (ÎÑ§Ïù¥Î≤Ñ Ïä§ÎßàÌä∏ Ïä§ÌÜ†Ïñ¥)`

- `ÏóîÏóîÎßàÏºì`

- `tmon (1Î≤à ÏòµÏÖò, 2Î≤à ÏòµÏÖò)`
- Í∞ÑÌóêÏ†ÅÏúºÎ°ú xpathÍ∞Ä Î∞îÎÄåÏñ¥ÏÑú time exception error Í∞Ä Î∞úÏÉùÌïúÎã§. body / Ï≤´Î≤àÏß∏ div Ïù∏Îç±Ïä§Í∞Ä Î∞îÎÄú 
  



## Tips

- Ïû¨Í≥† ÌíÄÎ¶¨Îäî ÏãúÍ∞ÑÏù¥ ÎûúÎç§ÏûÖÎãàÎã§. Ïò§Ï†Ñ 8ÏãúÎ∂ÄÌÑ∞ Ïò§ÌõÑ 6Ïãú~7ÏãúÍπåÏßÄ ÏºúÎëêÏãúÍ∏∏ Í∂åÏû•Ìï©ÎãàÎã§.

- `test.py` Î°ú Ïª§Ïä§ÌÑ∞ÎßàÏù¥ÏßïÌïú ÏΩîÎìúÎ•º ÏãúÌóòÌï¥Î≥¥ÏÑ∏Ïöî!

- HOW TO CUSTOMIZE

  - `browser_form(domain)`Ïóê ÌåêÎß§ ÌéòÏù¥ÏßÄ ÎèÑÎ©îÏù∏ Îì±Î°ù

    or

  - `browser_form(domain)`Ïóê ÌåêÎß§ Î™©Î°ù ÌéòÏù¥ÏßÄ ÎèÑÎ©îÏù∏ Îì±Î°ù

  - ÌíàÏ†à Ïó¨Î∂ÄÎ•º ÌôïÏù∏ Ìï† Ïàò ÏûàÎäî webElement (ÌíàÏ†à Î°úÍ≥†ÎÇò Íµ¨Îß§ Í∞ÄÎä• Ïó¨Î∂Ä Îì±ÏùÑ Ï∂îÏ≤úÌï©ÎãàÎã§.) Î≥ÄÏàòÌôî ÌïòÏó¨ Íµ¨Îß§ Í∞ÄÎä•Ïãú  `go('text', True)` Ïã§Ìñâ



## Updates

- cjmall ÏÇ≠Ï†ú (Ïû¨Í≥† Ï†ÑÎ¨¥)









## 2020-05-18 0928 Ï°∞Ïù¥Ìä∏Î°† ÏïåÎ¶ºÏúºÎ°ú Ïù∏ÏßàÏÖã Íµ¨Îß§ ÏôÑÎ£å ! :joy: "
11,Chriskeehk/Animal-Crossing,HTML,
12,helmasaur/ac-keijiban,JavaScript,"[![License: MIT](https://img.shields.io/badge/License-MIT-yellow.svg)](https://opensource.org/licenses/MIT)
[![](https://img.shields.io/npm/v/ac-keijiban.svg)](https://www.npmjs.com/package/ac-keijiban)

# AC-Keijiban

Sends a random message from the *Animal Crossing: Wild World* video game on Nintend DS created by Katsuya Eguchi and published in 2005.

The quotes come from three types of board message:
- ""Message of the Week""
- ""Poetry""
- ""Talking to Myself""

## Installation

You have to add this module to your npm modules folder.

```bash
$ npm install ac-keijiban
```

## Example

### Importing the module

```js
// Require with a language (format xx)
const acKeijiban = require('ac-keijiban')('en');
// Require with a language (format xx-YY) sets 'en'(format xx)
const acKeijiban = require('ac-keijiban')('en-US')
// Require without an argument sets 'en'
const acKeijiban = require('ac-keijiban')();
```

### Displaying a random ""Message of the Week""

```js
console.log('*Message of the Week*');
console.log(acKeijiban.messageOfTheWeek.random());
```

### Displaying a random ""Poetry""

```js
console.log('-Poetry-');
console.log(acKeijiban.poetry.random());
```

### Displaying a random ""Talking to Myself""

```js
console.log('-Talking to Myself-');
console.log(acKeijiban.talkingToMyself.random());
```

## Translation

For the moment, the only language avaible is English. The French messages are being collected directly from *Animal Crossing: Wild World* on Nintendo DS.

Obviously, you are free to participate to the translation in French or in any other language.

### Avaible languages

#### English 
- ""Message of the Week"": 85 *(complete)*
- ""Poetry"": 2 *(complete)*
- ""Talking to Myself"": 74 *(complete)*
#### French
- ""Message de la semaine"": 18
- ""Po√®me"": 0
- ""R√©flexions"": 13

## Thanks

Thanks to:
- The [*Programming Discussion*](https://progdisc.club) and the [*Coding Den*](https://discordapp.com/invite/code) Discord servers;
- [r/AnimalCrossing](https://www.reddit.com/r/AnimalCrossing) on Reddit;
- The [*Bulletin Board*](https://animalcrossing.fandom.com/wiki/Bulletin_Board) article on the *Animal Crossing* FANDOM wiki;
- Nintendo and Katsuya Eguchi for creating *Animal Crossing*;
- [BelleChoucroute](https://twitter.com/BelleChoucroute) for the French translation.
- [Zeste de Savoir](https://zestedesavoir.com) especially (ache and A-312) for making my code better.
## Licenses

- My source code is published under [MIT License](https://github.com/Helmasaur/ac-keijiban/blob/master/LICENSE).
- All the quotes from *Animal Crossing: Wild World* is the property of Nintendo."
13,artpark/AnimalCrossingUnity,C#,# AnimalCrossingUnity
14,dylannelson/AnimalCrossingDashboard,Jupyter Notebook,"# AnimalCrossingDashboard
## Dynamic Dashboard for Animal Crossing New Horizons
[Updates and Progress](https://github.com/dylannelson/AnimalCrossingDashboard/blob/main/Drafting/README.md)  
  
[>>> Working Site <<<](https://dylannelson.github.io/AnimalCrossingDashboard/)
    
![dec28th progress](Drafting/Sketches/12-28.PNG)
### Uses:
- Tracking the fish you've caught so far, saved locally
- See what fish you have left to collect
- See when and where to catch any missing fish

Updated with data visuals live, based off of your collection.

### Achieved Goals:
1. Make a grid for all fish and logos to represent them
2. Connect the data of each fish to their corresponding grid box
3. Allow the fish to be toggled on and off and save them locally
4. Make 4 data viz to help the users collect their remaining fish 
more efficiently
5. Host the site for others to use  
6. Scale with size: Make the bottom two graphs able to handle more than 20 data points
7. Basic aesthetics
8. Info/Help page
  
### Current Goals
9. More relevant units for first graph  
10. Better CSS/aesthetics

  
#### Stretch Goals:
Goals we would like to achieve as a bonus from our original intentions
1. Integrate the bug catalog, the second most sought afer creature
    - Requires doing all of the work above, but for a new dataset
2. Add artworks, the third most important
3. Add critters as well
4. Add additional info for each creature, like the informational quotes provided ingame
<br><br><br>
<ins>Credits</ins>
- [sungyeonu](https://github.com/sungyeonu/animal-crossing-scraper) for 
their web scraper and data"
15,chuangmaster/AnimalCrossingLineBotUpdateDoc,,"# AnimalCrossingLineBotUpdateDoc
Ê≠§ÁÇ∫„ÄåÈõÜÂêàÂï¶ÔºÅÂãïÁâ©Ê£ÆÂèãÊúÉ„ÄçÊñºLine‰∏äÁöÑÊ©üÂô®‰∫∫„ÄåLineÁã∏Á´ØÊ©ü„ÄçÁöÑÊõ¥Êñ∞Á¥ÄÈåÑËàáÂèçÈ•ãÂõûÊáâÁ¥ÄÈåÑ

---
# ÂïèÂç∑ÂèçÈ•ã
ÊâÄÊúâÂ°´Ë°®ÂñÆÂõûÈ•ãÊñºÊàëÁöÑÂïèÈ°åÔºåÊàëÂ∞áÊñºÊ≠§Âú∞ÊñπÈÄ≤Ë°åÂõûË¶ÜÔºåÂ∏åÊúõÊúâÁ≠îË¶ÜÂà∞‰Ω†ÂÄëÁöÑÂïèÈ°å:) <br>
üëâ https://lihi1.com/nY9Ah

---
## Ê©üÂô®‰∫∫ÂäüËÉΩËàáÊåá‰ª§
1. ÊâæDIYÈÖçÊñπ Ëº∏ÂÖ•ÂÅö[ÈÅìÂÖ∑ÈóúÈçµÂ≠ó] ‰æãÂ¶Ç: @ÂÅöÊ´ªËä±„ÄÅ@ÂÅöÊ´ªËä±ÂÇò
> Ê≠§ÂäüËÉΩÈÄ≤Ë°åÊ®°Á≥äÊØîÂ∞çÔºåÂ¶ÇÊûúÊêúÂ∞ãÊ´ªËä±ÂèØËÉΩÊúÉÂèñÂæóÊõ¥Â§öËàáÊ´ªËä±Áõ∏ÈóúÁöÑÈÖçÊñπ<br>
> ÁâπÂà•Ê≥®ÊÑèÁï∂Â¶ÇÊûúËº∏ÂÖ•ÈÖçÊñπÁöÑÂÖßÂÆπÂåÖÂê´Á≤æÊ∫ñÂÖßÂÆπÊôÇÔºåÂÉÖÊúÉÈ°ØÁ§∫Á≤æÊ∫ñÈ†ÖÁõÆÔºå‰æãÂ¶ÇÊêúÂ∞ã„ÄåÈèüÂ≠ê„ÄçÊôÇÔºåÊúÉÁõ¥Êé•Â∏∂Âá∫ÈèüÂ≠êÁöÑÈÖçÊñπÔºå‰∏çÊúÉÂá∫Áèæ„ÄåÈáëËâ≤ÈèüÂ≠ê„Äç
> Â¶ÇÊûúÊúâË¶ÅÊü•ÁúãÂÖ∂‰ªñÈèüÂ≠êË≥áË®äÔºåÂª∫Ë≠∞Ëº∏ÂÖ•„Äå@ÂÅö**Èèü**„ÄçÁöÑÈóúÈçµÂ≠ó

2. ÊâæÂ≥∂Ê∞ëËàáÁâπÊÆäÂ≥∂Ê∞ëË≥áË®ä Ëº∏ÂÖ•Ë™∞ÊòØ[Â≥∂Ê∞ëÂêçÁ®±]Êàñ[Â≥∂Ê∞ëÂêçÁ®±]ÊòØË™∞ ‰æãÂ¶Ç: Ë™∞ÊòØÈòø‰øù„ÄÅÂÇëÂÖãÊòØË™∞„ÄÅË™∞ÊòØÁã∏ÂÖã
> Ê≠§ÂäüËÉΩÊîØÊè¥‰∏≠(ÁπÅÈ´î)„ÄÅËã±Êñá„ÄÅÊó•Êú¨ÊêúÂ∞ã

3. Êü•Á®ÆÊóèÂàÜÈ°û „Äå@Á®ÆÊóè„Äç‰æãÂ¶Ç: @Á®ÆÊóè
> @Á¨¶ËôüÁõÆÂâçË®≠Ë®àÊòØÂçäÂΩ¢

4. ÊâæÂ≥∂Ê∞ëÁ®ÆÊóè „Äå@Á®ÆÊóè Á®ÆÊóèÂêçÁ®±„Äç ‰æãÂ¶Ç: @Á®ÆÊóè Ë≤ì
> ÁõÆÂâçÂÉÖÊîØÊè¥Ë°åÂãïË£ùÁΩÆ‰∏äÁöÑLine APP <br>
> ‰ΩøÁî®**Á≤æÊ∫ñÊØîÂ∞ç**

5. ÊâæÂ≥∂Ê∞ëÂÄãÊÄßÂàÜÈ°û Ëº∏ÂÖ•„Äå@ÂÄãÊÄß„Äç‰æãÂ¶Ç: @ÂÄãÊÄß
> ÁõÆÂâçÂÉÖÊîØÊè¥Ë°åÂãïË£ùÁΩÆ‰∏äÁöÑLine APP <br>
> ‰ΩøÁî®**Á≤æÊ∫ñÊØîÂ∞ç**

6. ÊâæÂ≥∂Ê∞ëÂÄãÊÄß Ëº∏ÂÖ•„Äå@ÂÄãÊÄß ÂÄãÊÄßÂàÜÈ°û„Äç‰æãÂ¶Ç: @ÂÄãÊÄß Ëá™ÊàÄ„ÄÅ@ÂÄãÊÄß ÊÇ†Èñí
> ÁõÆÂâçÂÉÖÊîØÊè¥Ë°åÂãïË£ùÁΩÆ‰∏äÁöÑLine APP <br>
> ‰ΩøÁî®**Á≤æÊ∫ñÊØîÂ∞ç**

7. Êâæ‰ªäÂ§©Ë™∞ÁîüÊó• Ëº∏ÂÖ•„Äå@ÁîüÊó•„Äç‰æãÂ¶Ç: @ÁîüÊó•
> ÂÉÖÈ°ØÁ§∫‰ªäÊó•ÁîüÊó•ÁöÑÂ≥∂Ê∞ë

8. ÊâæÂ≥∂Ê∞ëÁîüÊó• Ëº∏ÂÖ•„Äå@ÁîüÊó• Month/Day„Äç‰æãÂ¶Ç: @ÁîüÊó• 04/22„ÄÅ@ÁîüÊó• 12/31
> Ëº∏ÂÖ•ÈåØË™§Â∞á‰∏çÂõûÊáâ

9. Êü•Ë©¢ÂîÆÂÉπ Ëº∏ÂÖ•„Äå@Ë≥£È≠öÂêçÁ®±/ÊòÜËü≤ÂêçÁ®±/Ê§çÁâ©Ê∞¥ÊûúÂêçÁ®±„Äç(ÁõÆÂâçÂÉÖÊîØÊè¥È≠ö„ÄÅÊòÜËü≤„ÄÅÊ∞¥ÊûúÊ§çÁâ©) ‰æãÂ¶Ç: @Ë≥£È±íÈ≠ö„ÄÅ@Ë≥£ÁãºËõõ„ÄÅ@Ë≥£Ê´ªÊ°É
> ÁõÆÂâçÂÉÖÊîØÊè¥È≠ö„ÄÅÊòÜËü≤<br>
> ‰ΩøÁî®**Á≤æÊ∫ñÊØîÂ∞ç**

10. Êü•Ë©¢Ëü≤È≠öÊçïÊçâÊÉÖÂ†±„Äå@È≠ö [È≠öÂêçÁ®±]„Äç„ÄÅ„Äå@Ëü≤ [Ëü≤ÂêçÁ®±]„Äç ‰æãÂ¶Ç: @È≠ö ÈØ®ÈØä„ÄÅ@Ëü≤ ÁãºËõõ
> ÁõÆÂâçÂÉÖÊîØÊè¥È≠ö„ÄÅÊòÜËü≤<br>
> ‰ΩøÁî®**Á≤æÊ∫ñÊØîÂ∞ç**ÊØîÂ∞çÂñÆ‰∏ÄÈ†ÖÁõÆ
> ‰ΩøÁî®**Ê®°Á≥äÊØîÂ∞ç**ÊØîÂ∞çÂ§öÂÄãÈÅ∏ÂñÆ
> ÈÄôÂÄãÂàÜÈ°ûÊòØÂÆòÊñπÁöÑÂàÜÈ°ûÔºåÂõ†Ê≠§ÈùíËõô„ÄÅÈØäÈ≠ö„ÄÅÈØ®È≠öÁ≠âÔºåÈõñÁÑ∂‰∏çÊòØÈ≠öÔºå‰ΩÜÊòØË¢´ÂàÜÈ°ûÂà∞@È≠ö

11. Êü•Ë©¢ÊüêÊúàËü≤È≠öÊ∏ÖÂñÆ„Äå@È≠ö (Êúà‰ªΩ)Êúà„Äç„ÄÅ„Äå@Ëü≤ (Êúà‰ªΩ)Êúà„Äç ‰æãÂ¶Ç: @È≠ö 7Êúà, @Ëü≤ 7Êúà
> ÁõÆÂâçÂäüËÉΩÈ°ØÁ§∫ËºÉÁÇ∫Á∞°ÈôãÔºåË´ãË¶ãË´í

12. Êü•Ë©¢ÂåñÁü≥ Ëº∏ÂÖ•„Äå@Ê§çÁâ© [Ê§çÁâ©ÂêçÁ®±]„Äç ‰æãÂ¶Ç: @Ê§çÁâ© Ê©òËâ≤Ê≥¢ÊñØËèä
> ‰ΩøÁî®**Ê®°Á≥äÊØîÂ∞ç**

13. Êü•Ë©¢ÂåñÁü≥ Ëº∏ÂÖ•„Äå@ÂåñÁü≥ [ÂåñÁü≥ÂêçÁ®±]„Äç ‰æãÂ¶Ç: @ÂåñÁü≥ Êö¥Èæç
> ‰ΩøÁî®**Ê®°Á≥äÊØîÂ∞ç**

14. Êü•Ë©¢ËóùË°ìÂìÅ Ëº∏ÂÖ•„Äå@ËóùË°ìÂìÅ [ËóùË°ìÂìÅÂàÜÈ°û„ÄÅÂêçÁ®±„ÄÅÁúüÂØ¶ÂêçÁ®±]„Äç‰æãÂ¶Ç: @ËóùË°ìÂìÅ ÂêçÁï´„ÄÅ@ËóùË°ìÂìÅ ÈõïÂ°ë„ÄÅ@ËóùË°ìÂìÅ ÂêçË≤¥ÁöÑÂêçÁï´„ÄÅ@ËóùË°ìÂìÅ ÊòüÁ©∫
> ‰ΩøÁî®**Ê®°Á≥äÊØîÂ∞ç**
> ÁâπÂà•Âä†ÂÖ•Áï´‰ΩúÁúüÂÅΩÔºå‰πüÂä†ÂÖ•ÁúüÂØ¶Áï´‰ΩúÁöÑÂêçÂ≠óËàá‰ΩúËÄÖÔºåÈÉΩÂèØ‰ª•ÈÄèÈÅéÈóúÈçµÂ≠ó‰æÜÊêúÂ∞ãÂà∞

15. Êü•Ë©¢ÂÆ∂ÂÖ∑„ÄÅÊúçÈ£æ Ëº∏ÂÖ•„Äå@Êâæ [ÂÆ∂ÂÖ∑ÂêçÁ®±/ÊúçÈ£æ]„Äç 
> ‰æãÂ¶Ç: @Êâæ Êú®Âêâ‰ªñ„ÄÅ@Êâæ ËûûËüªËæ≤Â†¥
> ‰æãÂ¶Ç: @Êâæ ËòãÊûúÊúç„ÄÅ@Êâæ Áâõ‰ªîÂ∏Ω„ÄÅ@Êâæ ÈáùÁπîÁΩ©Ë°´&Ë•ØË°´
> ‰ΩøÁî®**Ê®°Á≥äÊØîÂ∞ç**Ôºå‰ΩÜÈÅáÂà∞Â§öÂÄãÁõ∏‰ººÈ†ÖÁõÆÂøÖÈ†àÁ≤æÊ∫ñÊØîÂ∞ç<br>
> IconÂúñÁ§∫ÂàÜÂà•ÁÇ∫ÔºöÂèØ‰ª•ÊîπÈÄ†„ÄÅÂèØ‰ª•Êµ¨ÈªûË≥ºË≤∑„ÄÅÂèØ‰ª•DIY„ÄÅÂèØ‰ª•Á∂≤Ë≥º<br>
> ÊîØÊè¥ ÂÆ∂ÂÖ∑„ÄÅË£ùÈ£æÂìÅ„ÄÅÂ£ÅÊéõÁâ©„ÄÅÂú∞ÊØØ„ÄÅÂú∞Áâà„ÄÅÂ£ÅÁ¥ô„ÄÅÊüµÊ¨ÑÂàÜÈ°û„ÄÅÊâãÊåÅÁâ©ÂìÅ„ÄÅ‰∏äË∫´„ÄÅ‰∏ãË∫´„ÄÅÂ•óË£ù„ÄÅÈ†≠Êà¥„ÄÅÈ£æÂìÅ„ÄÅÈûãÂ≠ê„ÄÅËÉåÂåÖ„ÄÅÈõ®ÂÇò
> @ÊâæÁÇ∫Êñ∞Â¢ûÁöÑÊåá‰ª§ÔºåÂéüÊú¨ÁöÑ@ÂÆ∂ÂÖ∑„ÄÅ@ÊúçÈ£æ‰æùËàäÂèØ‰ª•Áî®Ôºå‰ΩÜÂª∫Ë≠∞‰ΩøÁî®@Êâæ(ÊØîËºÉÁ≤æÁ∞°)

16. ÊâæÂ∞ãÁ≥ªÂàó„Äå#ÂàÜÈ°ûÂêçÁ®±„Äç ‰æãÂ¶ÇÔºö‰æãÂ¶ÇÔºö„Äå#Êò•Â§©„Äç„ÄÅ„Äå#ÊòüÂ∫ß„Äç„ÄÅ„Äå#Á´πÂ≠ê„Äç„ÄÅ„Äå#ÈëÑÈêµ„Äç

17. Êñπ‰æøÂ∑•ÂÖ∑ Ëº∏ÂÖ•„Äå@tools„Äç

18. Âú®ËÅäÂ§©ÂÆ§ËàáÁæ§ÁµÑÁßªÈô§„ÄåLineÁã∏Á´ØÊ©ü„Äç Ëº∏ÂÖ•„Äå@bye„Äç
---

## Ë¥äÂä©Êàë
Ë¥äÂä©ÊñπÊ°àüëâ https://lihi1.com/2OMs8
Ë¥äÂä©ÂøÖÂ°´Âê¶ÂâáÁÑ°Ê≥ï‰∫´ÊúâÁ¶èÂà©üëâ https://lihi1.com/9zSXO

## Ë¥äÂä©ÂêçÂñÆ
* 2020-06-18	Êú®ÂúüÂúü	NTD 300
* 2020-06-18	Â∞è*(Ë¥äÂä©ÂõûÂ†±ÂñÆÊú™Â°´Ôºõ‰∏çÈ°ØÁ§∫ÂÖ®ÂêçÁ¢∫‰øùÁ¶èÂà©)	NTD 300
* 2020-06-17	ÊùúÂÆóÊÜ≤	NTD 150
* 2020-06-17	Âê±Âê±	NTD 500
* 2020-06-09	ËúúËúú	NTD 200
* 2020-06-08	Ë™†ÊÑè‰∫≠	NTD 600
* 2020-06-05	ÊûóÂ≠üÁíá Op ‡∏Ö’û‚Ä¢Ôªå‚Ä¢’û‡∏Ö	NTD 100

---
# Êõ¥Êñ∞ÁâàÊú¨
20200619
* [Fiexed] v2020061901 Ë™øÊï¥@ÂÅöÊåá‰ª§Ôºå‰øÆÊ≠£Á´πÊûóÁâÜÂúñÁâá

20200618
* [Release] v2020061801 Âä†ÂÖ•ÈÅìÂÖ∑È°èËâ≤È¢®Ê†º„ÄÅÂ≥∂Ê∞ëÂñúÊÑõÈ¢®Ê†ºËàáÈ°èËâ≤
* [Fiexed] v2020061801 Êú™Âá∫ÁèæÁâàÊú¨Â≥∂Ê∞ë‰øÆÊ≠£

20200615
* [Release] v2020061501 Â¢ûÂä†Â≥∂Ê∞ëÂÖßË£ù„ÄÅAmiiboÁ∑®Ëôü
* [Release] v2020061501 Âêà‰Ωµ@Êâæ„ÄÅ@ÊúçÈ£æÁöÑÊåá‰ª§

20200614
* [Fiexed] v2020061401 ‰øÆÊ≠£Á≥ûÈáëÈæúÂêçÁ®±

20200610
* [Fiexed] v2020061001 iPhoneÂ≥∂Ê∞ëÈ°ØÁ§∫ÈåØË™§‰øÆÊ≠£

20200609
* [Fiexed] v2020060901 ‰øÆÊ≠£ÂéüÈ≠öÂêç„ÄåÈªëÈ≠ö„ÄçÊîπÁÇ∫„ÄåÈ±ßÈ≠ö„Äç(‰∏≠ÊñáÁøªË≠ØÂïèÈ°å)

20200608
* [Fiexed] v2020060801 Âõ†Ë™øÊï¥Ë≥áÊñôÂ∞éËá¥bugÊ®°Á≥äÊØîÂ∞çÔºåÈ°ØÁ§∫Ëã±ÊñáÂïèÈ°å‰øÆÊ≠£

20200605
* [Release] v2020060501 ÊâãÊåÅÁâ©ÂìÅÊêúÂ∞ãÂÆåÊàêÔºåÂÖÅË®±‰ΩøÁî®„Äå@Êâæ„ÄçÊêúÂ∞ãÊâãÊåÅÁâ©ÂìÅÔºõÈáãÂá∫ÊâæÂàÜÈ°ûÂäüËÉΩ„Äå#ÂàÜÈ°û„Äç

20200602
* [Fiexed] v2020060201 ‰øÆÊ≠£Á´πÁØÄËü≤ÈåØË™§ÊôÇÈñì

20200601
* [Release] v2020052601 @Á®ÆÊóè„ÄÅ@ÂÄãÊÄßÊêúÂ∞ãÁµêÊûúÊé°Áî®LiffË¶ñÁ™ó

20200526
* [Fiexed] v2020052601 ‰øÆÊ≠£ÂÆ∂ÂÖ∑Ê§∞Â≠êÂ£ÅÊéõÁõÜÊ†ΩÂêçÁ®±

20200525
* [Fiexed] v2020052501 ‰øÆÊ≠£ÂÆ∂ÂÖ∑Ninetendo SwitchË≥áÊñôÈåØË™§Ôºõ‰øÆÊ≠£NPCËé´Âæ∑Èáå„ÄÅËé´ÈáåË≥áÊñô

20200521
* [Fixed] v2020052101 ‰øÆÊ≠£ÈëÑÈêµÊú®DIYÊ°åÊùêÊñôÈåØË™§

20200520
* [Fixed] v2020052001„Äå@Ëü≤„Äç„ÄÅ„Äå@È≠ö„ÄçÊåá‰ª§ÊôÇÊÆµÈ°ØÁ§∫ÈåØË™§‰øÆÊ≠£Ôºõ„Äå@Êâæ„ÄçÊåá‰ª§Âõ†Êõ¥Êñ∞Â∞éËá¥ÁÑ°Ê≥ïÈ°ØÁ§∫ÊüµÊ¨Ñ„ÄÅÂú∞ÊØØ„ÄÅÂú∞Êùø„ÄÅÁâÜÂ£Å‰øÆÊ≠£

20200519
* [Released] v2020051901 „Äå@Êâæ„ÄçÊåá‰ª§Ê®£ÂºèÂêçÁ®±ÁøªË≠ØÂÆåÊàêÔºåÂêåÊôÇË™øÊï¥ÂïÜÂ∫óÈ°ØÁ§∫ÊñáÊ°à
> Â∞öÊúâÊú¨È´îÂ∞öÊú™ÂÆåÊàêÁøªË≠Ø

20200518
* [Released] v2020051801 Êñ∞Â¢û„Äå@Êâæ„ÄçÊåá‰ª§ÂÖßÂÆπÔºåÂä†ÂÖ•ÊîπÈÄ†Êú¨È´î„ÄÅÊ®£Âºè„ÄÅÊï∏ÈáèËàáDIYÂèçÊü•
> ËøëÊúüÊúÉÈÄ≤Ë°åÁøªË≠Ø

20200515
* [Released] v2020051501 Ë™øÊï¥@È≠ö[Êúà‰ªΩ]Ëàá@Ëü≤[Êúà‰ªΩ]Êåá‰ª§
> ÊîπÊé°Áî®Á∂≤È†ÅÈ°ØÁ§∫

20200512
* [Fixed] v2020051202 Ë≥áÊñô‰øÆÊ≠£„ÄåDIY:È´òÊû∂Ëä±Á±É„ÄÅÂ≥∂Ê∞ë:Êü¥Âßê„ÄçÊåá‰ª§
* [Released] v2020051201 Êñ∞Â¢ûÂ≥∂Ê∞ëÊàøÂ≠êËàáË¥àËàáÊúçË£ùÈ¢®Ê†ºÈ°èËâ≤ÂÅèÂ•Ω
> ÈÄÅÂ∞çÊáâÁöÑÈ°èËâ≤ÊúçÈ£æÊúâÂä©ÊñºÂ¢ûÂä†Â•ΩÊÑüÂ∫¶

20200511
* [Released] v2020051102 Êñ∞Â¢ûÊü•Ë©¢„Äå@Êâæ xxx„ÄçÊåá‰ª§(Âéü@ÂÆ∂ÂÖ∑Êåá‰ª§)
* [Released] v2020051101 Êñ∞Â¢ûÊü•Ë©¢„Äå@ÊúçÈ£æ xxx„ÄçÊåá‰ª§

20200510
* [Fixed] v2020051003 ‰øÆÊ≠£Bug(DIY:ÊîπÈÄ†iconÈ°ØÁ§∫)
* [Fixed] v2020051002 ‰øÆÊ≠£Bug(@Á®ÆÊóè Á∂øÁæä2 Ê≤íÂèçÊáâ„ÄÅ@Á®ÆÊóè Â∞èÁÜä 3Ê≤íÂèçÊáâ„ÄÅÂÄãÊÄßÊàêÁÜüÂèäÊÇ†ÈñíÁî∑Â•≥„ÄÅÂÆ∂ÂÖ∑:Ê∂≤Êô∂Ëû¢ÂπïÁÑ°Ê≥ïÈ°ØÁ§∫)
* [Released] v2020051002 Êñ∞Â¢ûÂÆ∂ÂÖ∑Êåá‰ª§Ë≥áÊñô(ÂåÖÂê´ÊüµÊ¨Ñ„ÄÅÂú∞Êùø„ÄÅÂú∞ÊØØ„ÄÅÂ£ÅÁ¥ô)
* [Fixed] v2020051001 ÂÆ∂ÂÖ∑Êåá‰ª§ÁÑ°ÂèçÊáâbug

20200509
* [Released] v2020050901 Êñ∞Â¢ûÂÆ∂ÂÖ∑Êåá‰ª§Ë≥áÊñô(ÂåÖÂê´ÊüµÊ¨Ñ„ÄÅÂú∞Êùø„ÄÅÂú∞ÊØØ„ÄÅÂ£ÅÁ¥ô)
* [Fixed] v2020050901 ‰øÆÊ≠£Ë≥áÊñô(Â≥∂Ê∞ë:ÂÑíÊûóÂè£È†≠Á¶™)

20200508
* [Fixed] v2020050802 ‰øÆÊ≠£Ë≥áÊñô(DIY:ÈëÑÈêµËä±ÂúíÈï∑Ê§Ö)
* [Fixed] v2020050801 Ë™øÊï¥Âõ†ÁÇ∫Êõ¥Êñ∞Ê®£ÊùøÁî¢ÁîüÁöÑbug„ÄÅ‰øÆÊ≠£Ë≥áÊñô(Â≥∂Ê∞ë:Á´†‰∏∏‰∏∏Âè£È†≠Á¶™)
* [Released] v2020050801 Êõ¥Êñ∞Â≥∂Ê∞ëÊ®£ÊùøÔºåÊñ∞Â¢ûÈ†ÖÁõÆ(ÂÅèÂ•ΩË°£ÊúçÁöÑÈ°èËâ≤ËàáÈ¢®Ê†º)Ôºå*Ê≥®ÊÑè:Ê≠§‰∏¶ÈùûÂ≥∂Ê∞ëÂñúÈ°èËâ≤ÔºåËÄåÊòØË°£ÊúçÁöÑÂÅèÂ•ΩÈ°èËâ≤ËàáÈ¢®Ê†º*

20200507
* [Fixed] v2020050702 ‰øÆÊ≠£(DIY:Á∂†Ëâ≤ËçâË£ô„ÄÅËä±ÂúíÈï∑Ê§ÖÔºåÂ≥∂Ê∞ë:ËÇâËÇâ„ÄÅ‰ΩôÊùø)
* [Released] v2020050701 Êñ∞Â¢ûÁâπÊÆäÂ≥∂Ê∞ë(Êåá‰ª§ÁØÑ‰æã:„ÄåË™∞ÊòØÁã∏ÂÖã„Äç)

20200506
* [Released] v2020050603 Êñ∞Â¢ûÂ£ÅÊéõË≥áÊñô(Êåá‰ª§ÁØÑ‰æã:„Äå@ÂÆ∂ÂÖ∑ Â£ÅÊéõÂºèË†üÁá≠„Äç
* [Fixed] v2020050603 ‰øÆÊ≠£Ë≥áÊñô(DIY:ÊòüÊòüÂÅ¥ËÉåÂåÖ)
* [Fixed] v2020050602 ‰øÆÊ≠£Ë≥áÊñô(Ëü≤:Á´πÁØÄËü≤„ÄÅÂ≥∂Ê∞ë:Âè≤Âüπ‰∫û)„ÄÅË™øÊï¥UI
* [Released] v2020050601 ÂÆ∂ÂÖ∑Êåá‰ª§Êñ∞Â¢ûÈ†ÖÁõÆ(Êì∫È£æÈ°û)

20200505
* [Fixed] v2020050501 Ë≥áÊñô‰øÆÊ≠£(DIY:ÊâãÊäºÂºèÊ±≤Ê∞¥Âô®„ÄÅÊòüÊòüÊéõÊéõÊóó)

20200504
* [Released] v2020050401 Êñ∞Â¢ûÈõúÁâ©Ë≤©ÂîÆ(‰æãÂ¶Ç:@Ë≥£ÈáëÁ§¶Áü≥„ÄÅ@Ë≥£Ê≤ôÈå¢)
* [Fixed] v2020050401 Ë≥áÊñô‰øÆÊ≠£(Â≥∂Ê∞ëÊÄßÂà•ÈÅ∫Êºè:Ëä±Âç∑)

20200503
* [Fixed] v2020050302 Ë≥áÊñô‰øÆÊ≠£(ÂÆ∂ÂÖ∑‰æÜÊ∫êÊú™ÁøªË≠ØÂÆåÊàêÂ∞éËá¥bugÊú™È°ØÁ§∫)
* [Fixed] v2020050301 Ë≥áÊñô‰øÆÊ≠£(DIY:Á´πË£ΩÁá≠Âè∞„ÄÅÊ∑±Ëâ≤Á´πÂú∞ÊØØ„ÄÅÁπΩÁ¥õ‰∏âËâ≤Â†áËä±Âúà)

20200502
* [Fixed] v2020050204 Êñ∞Â¢ûË≥áÊñô(Ê§çÁâ©:Ê§∞Â≠ê)
* [Fixed] v2020050203 Ë≥áÊñô‰øÆÊ≠£(DIY:Áü≥Ê°å)
* [Fixed] v2020050202 UXË™øÊï¥(ÊòÜËü≤„ÄÅÈ≠öÊü•Ë©¢)
* [Released] v2020050201 Êñ∞Â¢ûÂÆ∂ÂÖ∑Êü•Ë©¢

20200501
* [Fixed] v2020050101 Ë≥áÊñô‰øÆÊ≠£(Â≥∂Ê∞ë:Áï™ËåÑÈÜ¨ÁöÑÂêçË®Ä„ÄÅDIY:Â§èËúúÊüëÊúç)

20200430
* [Released] v2020043003 Êñ∞Â¢ûÈ≠öËàáÊòÜËü≤Êúà‰ªΩÂΩôÊï¥Ê∏ÖÂñÆ„ÄÅÊñ∞Â¢ûË≥£Ê§çÁâ©Ê∏ÖÂñÆ
* [Fixed] v2020043002 Ë≥áÊñôÊ§çÁâ©Êåá‰ª§ÈåØË™§„Äå@Ê§çÁâ© xx„Äç„ÄÅBug‰øÆÊ≠£
* [Fixed] v2020043001 Ë≥áÊñô‰øÆÊ≠£(DIYÈÖçÊñπ: Áü≥Âá≥Â≠ê)„ÄÅÂä†ÂÖ•ÈÅäÊà≤1.2.0ÁâàÁöÑÊ§çÁâ©ÂÖßÂÆπ(ÁÅåÊú®)

20200429
* [Fixed] v2020042903 Ë™øÊï¥„Äå@ËóùË°ìÂìÅ„ÄçÊåá‰ª§‰ΩøÁî®ËÄÖÈ´îÈ©óËàá‰øÆÊ≠£Ë™§Ê§çÂÖßÂÆπ„ÄÅË™øÊï¥„ÄåÊòØË™∞„ÄçÊåá‰ª§bug
* [Released] v2020042902 Êñ∞Â¢ûÊ§çÁâ©ÊÉÖÂ†±ÂäüËÉΩ
* [Update] v2020042901 Ë™øÊï¥„ÄåË≥£„Äç„ÄÅ„ÄåÂÅö„ÄçÊåá‰ª§

20200428
* [Released] v2020042802 Êñ∞Â¢ûËü≤È≠öÊÉÖÂ†±ÂäüËÉΩ
* [Fixed] v2020042801 Ë≥áÊñô‰øÆÊ≠£(DIYÈÖçÊñπ: Â∏∏Ë¶ãÂ∫≠ÂúíÁü≥„ÄÅÈ´òËÅ≥Â∫≠ÂúíÁü≥„ÄÅÊ£ïÊ´öÊ®πÁáà)

20200427
* [Released] v2020042702 ‰øÆÊ≠£ÊµÅÈáèÂïèÈ°å
* [Fixed] v2020042701 Ë≥áÊñô‰øÆÊ≠£(DIYÈÖçÊñπ: ÈãºÁ≠ã)

20200426
* [Released] v2020042601 Ë™™ÊòéÊñáÂ≠ó‰øÆÊ≠£„ÄÅË≥áÊñô‰øÆÊ≠£(DIYÈÖçÊñπ:ÂúìÊú®Èï∑Ê§Ö„ÄÅÈ´òÊû∂Ëä±Á±É„ÄÅÂæΩÁ´†ÈñÄÁâå)
* [Released] v2020042601 Êñ∞Â¢ûÂåñÁü≥Êü•Ë©¢„ÄÅËóùË°ìÂìÅÊü•Ë©¢(Ëæ®Ë≠òÂäüËÉΩËàáÁúüÂØ¶Ë≥áË®ä

20200424
* [Released] v2020042402 Êñ∞Â¢ûÂåñÁü≥Êü•Ë©¢„ÄÅËóùË°ìÂìÅÊü•Ë©¢
* [Fixed] v2020042401 ‰øÆÊ≠£Ë≥áÊñô(DIYÈÖçÊñπÂêçÁ®±:ÈáéÂ§ñÂúìÊú®Èï∑Ê§Ö„ÄÅÈäÄÊ≤≥Á≥ªÂú∞Êùø„ÄÅ--Ê§∞Â≠êÁáà--)

20200423
* [Fixed] v2020042301 ‰øÆÊ≠£Ë≥áÊñô(DIYÈÖçÊñπÂêçÁ®±:ÈëÑÈêµËä±ÂúíÈï∑Ê§Ö„ÄÅÈêµÁî≤Èù¢ÁΩ©„ÄÅÈáëÈ†≠ÁõîÔºõÂ≥∂Ê∞ëÁîüÊó•Â§™Âπ≥)

20200422
* [Released] v2020042203 ‰øÆÊ≠£Ë≥áÊñô(DIYÈÖçÊñπÂêçÁ®±:ÊµÅÊ∞¥Á¥†È∫µÔºõÂ≥∂Ê∞ëÂêçÁ®±ËåÉÂ¶ÆËéé„ÄÅÊØ¨Ëóª)
* [Released] v2020042202 Êñ∞Â¢ûÁîüÊó•Êü•Ë©¢„ÄÅÂÄãÊÄßÊü•Ë©¢
* [Fixed] v2020042201 Âä†ÂÖ•Ë≥áÊñô(ÈëÑÈêµËä±ÂúíÈï∑Ê§Ö„ÄÅËçâÁ∑®ÂæåËÉåÂåÖ)
* [Fixed] v2020042201 ‰øÆÊ≠£Ë≥áÊñô(Êó•ËêΩËõæÂêçÁ®±ÈåØË™§„ÄÅÈáëËâ≤Á≥ûÈáëÈæúÂêçÁ®±ÈåØË™§„ÄÅ‰øûÂè∏Âª∑ÂêçÁ®±ÈåØË™§)

20200421
* [Released] v2020042002 Êñ∞Â¢ûËü≤È°û„ÄÅÈ≠öÈ°ûÊü•Ë©¢ÂîÆÂÉπ
* [Fixed] v2020042101 Âä†ÂÖ•Ë≥áÊñô(È´òÊû∂Ëä±Á±É)


20200420
* [Released] v2020042002 Êñ∞Â¢ûÂèØ‰ª•Êü•Ë©¢Á®ÆÊóèÂäüËÉΩ
* [Fixed] v2020042001 ‰øÆÊ≠£DIYÂ∑•‰ΩúÂè∞ÊØîÂ∞çÂïèÈ°å


20200419
* [Fixed] v2020041902 ‰øÆÊ≠£Â≥∂Ê∞ëËã±ÊñáÂêçÁ®±Â§ßÂ∞èÂØ´ÊØîÂ∞çÂïèÈ°å
* [Fixed] v2020041901 Ë™øÊï¥ÊâæÂ∞ãÂ≥∂Ê∞ëÊïèÊÑüÂ∫¶ÔºåÂÉÖÊúâ„ÄåÁµêÂ∞æÁÇ∫**ÊòØË™∞**„Äç„ÄÅ„ÄåÈñãÈ†≠ÁÇ∫**Ë™∞ÊòØ**„ÄçÊúÉË¢´ÈÄ≤Ë°åÊêúÂ∞ã

---
# Ëá¥Ë¨ù
* Ê¢ìÈàû
* ShihChi Hsu
* ÈòøD(Ë®±‰ª≤Âª∑)
* ÊûóÊæÑÂ≠ê
* ÊûóÂ≠üÁíá
* KeKe

## ÁâπÂà•ÊÑüË¨ù
Êèê‰æõÊâÄÊúâÂõûÂ†±ÁöÑ‰∫∫üôè<br> Â¶ÇÊûúÊÇ®‰πüÊúâÊèê‰æõË≥áÊñô‰∏¶ÊÉ≥ÂÖ¨Â∏ÉËá¥Ë¨ùÂêçÂñÆÔºåË´ãËàáÊàëËÅØÁµ°üòÉ

## Êàë‰πüÊÉ≥Ë≤¢Áçª
Â¶ÇÊûúÊÇ®Â∞çË≥áÊñôÊ†°Ê≠£ÁøªË≠Ø‰πüÊúâËààË∂£ÔºåÊ≠°ËøéÈÄ£Áµ°Êàë
"
16,cocopon/acqr,TypeScript,"# ACQR: QR code generator for Animal Crossing


![overview](https://user-images.githubusercontent.com/602961/79967363-b056e880-84c9-11ea-89e2-1d563bcbe017.png)


## Features
- Auto scaling and quantizing input image
- Customizing title and author
- Image preview


## Setup

```
$ npm install -g @cocopon/acqr
```

## Usage

```
$ acqr in.png
$ acqr in.png --title 'Title' --author 'Author' --output out.png
$ acqr in.png --preview preview.png
```
"
17,younata/Swift-Crossing,Swift,"An animal crossing clone in swift


[There's a Pivotal Tracker project for this](https://www.pivotaltracker.com/n/projects/1293068)."
18,jameskokoska/AnimalCrossingNH-App,Dart,"# ACNH Pocket Guide
This version written in Flutter is no longer maintained. See https://github.com/jameskokoska/AnimalCrossingNH-App-React for the new version written in React Native.   
Written in Flutter, supporting iOS and Android, with a modern and well polished design ACNH Pocket Guide is the best guide for tracking your collection as you progress through the game. View information on collectibles and creatures, as well as upcoming in game events. With the latest game information, this is the one stop for all your ACNH needs.
## Release
https://play.google.com/store/apps/details?id=com.acnh.pocket_guide

## Technical Features
 - Read and save information
 - Read information from JSON database efficiently
 - Optimization of lists views and database access
 - Classes and functions to allow for modular programming page design
 - Python script to easily split up spreadsheet JSON into multiple files, for easy database updating
 - UI planning done all in Adobe XD, see UI Assets folder

## Features

- Dark mode
- Modern and polished interface and design
- Upcoming events list + Villager birthdays
- Active creatures list
- Fish tracking + fish shadows
- Bug tracking
- Sea creatures tracking + sizes
- Fossils collection tracking
- Art collection tracking
- Villager information
- Crafting materials and tools guide
- DIY recipe sources
- Furniture and variations collection
- Clothing and variations collection
- Flooring and wallpaper collections
- Slider song collection
- Emoticon collection
- Store hours
- Construction page and costs
- Television program guide
- Weather percentage guide
- Seasons information and resource availability

## Screenshots
Can be seen here: https://play.google.com/store/apps/details?id=com.acnh.pocket_guide
or below:
| ![Screenshot 1](/Promotional/1.jpg)  | ![Screenshot 2](/Promotional/2.jpg) | ![Screenshot 3](/Promotional/3.jpg) |
| ------------- | ------------- | ------------- |
| ![Screenshot 4](/Promotional/4.jpg)  | ![Screenshot 5](/Promotional/5.jpg) | ![Screenshot 6](/Promotional/6.jpg) |
| ![Screenshot 7](/Promotional/7.jpg)  | ![Screenshot 8](/Promotional/8.jpg) | ![Screenshot 9](/Promotional/9.jpg) |
| ![Screenshot 10](/Promotional/10.jpg)  |
"
19,AustinTSchaffer/animal-crossing-crafting-recipe-database,Python,"# Animal Crossing: Crafting Recipe Database

This repository contains a few inter-related applications that process, serve, and display
data related to all of the crafting recipes from the game: **Animal Crossing: New Horizons**.

A big inspiration for this project was and is the
[Stardew Profits](https://thorinair.github.io/Stardew-Profits/) web application, which helps
users figure out which crops to plant in order to maximize profits.


## Web Scraper (`data/app.py`)

This component of the application is a web scraper that uses Selenium to scrape a few pages from
the [Fandom Animal Crossing Wiki](https://animalcrossing.fandom.com/wiki/Animal_Crossing_Wiki)
in order to generate a JSON document that contains all of the information on crafting recipes
and raw materials from the Wiki.


## GraphQL API (`graphql-backend/app.py`)

This component serves the data generated by the web scraper as a GraphQL API, containing the
following endpoints:

- `wikiBaseUrl: String`: Returns the base URL for the Animal Crossing Fandom Wiki.
- `rawMaterial(id: String): RawMaterial`: Returns a single raw material, using the raw material's ID.
- `rawMaterials: [RawMaterial]`: Returns a list of all raw materials.
- `recipe(id: String):` Recipe: Returns a single recipe using the recipe's ID.
- `recipes(rawMaterialId: StringrecipeIds: [String]): [Recipe]`: Returns a list of recipes. Has a few filter options.
- `craftableRecipes(rawMaterials: [CraftableRecipeRawMaterialArg]): [CraftableRecipeResponse]`: Returns a list of recipes that can be crafted based on a list of raw materials.


## Web Interface

The intent of was to also provide a web interface that allowed users to easily answer questions about
all of the crafting recipes that are available in the game. Some of the questions that I had in mind
while playing the game and working on the web scraper and backend API were:

- What are all of the recipes that use iron nuggets? Clay? Hardwood?
- How much are each of those recipes worth?
- I don't have this recipe... where can I get it?
- How many of this recipe can I craft based on what I currently have on hand?
- Are there any recipes that are worth more than others, relative to the materials that each requires?
- What is the maximum profit that I can make from all of the wood, stone, iron, and clay that I have and what do I need to craft to achieve that?

Work on this component of the application has not yet begun. Please let me know if you are interested
in working on the web interface component by opening an issue on this repository or by emailing me at.

> Austin Schaffer
> 
> schaffer.austin.t (at) gmail.com

Part of the reason why work on the web interface was never started was because catching Tarantulas and
playing the Stalk Market are vastly more profitable, relative to the work required. I still believe that
the crafting system in the game is interesting and exploitable, and this application may still be useful
to those who are looking to maximize their profit on the materials that they've acquired over time.


## Analysis

**Caveat:** Nintendo could change the pricing model for **Animal Crossing: New
Horizons** at any time, which could invalidate the results of this analysis
altogether. Also the data that this analysis was based on was effectively
crowd-sourced from the Animal Crossing Fandom Wiki on April 7th, 2020. On that
date, not all of the recipes available in the game were fully documented in the
Wiki and some of the pricing and materials data that was documented in the Wiki
may have been inaccurate.

In general, most of the craftable items in the game have a sell price that is
equal to double the price of all of the raw materials that went into the recipe
put together. Taking the Hearth as an example, the Hearth recipe requires:

- 2 bamboo pieces, worth 80 bells each
- 4 clay, worth 100 bells each
- 5 hardwood, worth 60 bells each
- 5 iron nuggets, worth 375 bells each

If you sold all of these raw materials on their own, you would receive 2735
bells. If you elect to craft those materials into a hearth then sell the hearth,
you would receive 5470 bells.

This formula works across all crafting materials with the exception of 4 recipes
where the sell price of the completed recipe is worth MORE than double the price
of the materials that were used to craft the recipe and 23 recipes where the
sell price is LESS than double the price of the materials.

The following 4 recipes are worth more than double the price of the materials that
were used to craft them.

| Recipe             | Value of Materials | Value of Recipe | VoR / VoM |
| ------------------ | ------------------ | --------------- | --------- |
| Flimsy fishing rod | 25                 | 100             | 4         |
| Flimsy net         | 25                 | 100             | 4         |
| Fish bait          | 60                 | 200             | 3 1/3     |
| Pitfall seed       | 40                 | 140             | 3 1/2     |

The following 23 recipes are worth less than double the price of the materials
that were used to craft them. If you're looking to generate cash, do not craft
these recipes. Also interesting to note is that all of the recipes that use gold
nuggets show up in this list, meaning there's no way to increase the value of a
gold nugget.

| Recipe               | Value of Materials | Value of Recipe | VoR / VoM          |
| -------------------- | ------------------ | --------------- | ------------------ |
| Axe                  | 655                | 625             | 0.9541984732824428 |
| Flimsy shovel        | 300                | 200             | 0.6666666666666666 |
| Shovel               | 675                | 600             | 0.8888888888888888 |
| Fishing rod          | 400                | 600             | 1.5                |
| Net                  | 400                | 600             | 1.5                |
| Flimsy watering can  | 300                | 200             | 0.6666666666666666 |
| Watering can         | 675                | 600             | 0.8888888888888888 |
| Slingshot            | 300                | 225             | 0.75               |
| Golden slingshot     | 10300              | 10300           | 1.0                |
| Birdbath             | 450                | 400             | 0.8888888888888888 |
| Palm-tree lamp       | 2640               | 3280            | 1.2424242424242424 |
| Aroma holder         | 400                | 600             | 1.5                |
| Coconut juice        | 500                | 500             | 1.0                |
| Golden arowana model | 30000              | 30000           | 1.0                |
| Gold bars            | 30000              | 30000           | 1.0                |
| Golden candlestick   | 20000              | 20000           | 1.0                |
| Golden dishes        | 10000              | 10000           | 1.0                |
| Golden dung beetle   | 30000              | 30000           | 1.0                |
| Coconut wall planter | 550                | 600             | 1.0909090909090908 |
| Golden gears         | 11125              | 11125           | 1.0                |
| Gold armor           | 80000              | 80000           | 1.0                |
| Leaf                 | 50                 | 80              | 1.6                |
| Medicine             | 330                | 100             | 0.3030303030303030 |

If you ignore those 27 recipes and gold nuggets, you can generate a table of the
value of each crafting material when used in a crafting recipe by doubling its
sell price.

| Raw Material         | Sell Price When Crafted | Stack Size | Value of a Stack |
| -------------------- | ----------------------- | ---------- | ---------------- |
| Iron nugget          | 750                     | 30         | 22500            |
| Young spring bamboo  | 400                     | 30         | 12000            |
| Earth Egg            | 400                     | 30         | 12000            |
| Stone Egg            | 400                     | 30         | 12000            |
| Leaf Egg             | 400                     | 30         | 12000            |
| Wood Egg             | 400                     | 30         | 12000            |
| Sky Egg              | 400                     | 30         | 12000            |
| Water Egg            | 400                     | 30         | 12000            |
| Coconut              | 1000                    | 10         | 10000            |
| Clay                 | 200                     | 30         | 6000             |
| Wasp nest            | 600                     | 10         | 6000             |
| Stone                | 150                     | 30         | 4500             |
| Bamboo piece         | 160                     | 30         | 4800             |
| Wood                 | 120                     | 30         | 3600             |
| Hardwood             | 120                     | 30         | 3600             |
| Softwood             | 120                     | 30         | 3600             |
| Cherry-blossom petal | 400                     | 10         | 4000             |
| Fruit                | 200 (Regardless)        | 10         | 2000             |
| Clump of weeds       | 20                      | 99         | 1980             |
| Tree branch          | 10                      | 30         | 300              |
| Fossil               | 200                     | 1          | 200              |

From this table, you can see that only stacks of bunny day eggs, coconuts, young
spring bamboo, and iron nuggets are worth more than a single tarantula or
scorpion. I personally would argue that the effort required to get a stack of
any one of those is higher than the effort required to set up a viable tarantula
island and then catch a few. Regardless, this table may still useful when
choosing between a partial stack of wood and the fish that you just caught, or
motivating yourself to turn all of the unused materials in your possession into
a little extra cash.

## Recommendations

Don't just sell all of your resources, craft them into stuff in order to double
their value. ...except gold nugs, those are always worth 10k. Also, just sell
your extra sticks. The crafting recipes that use them really aren't worth the
trouble.

If you REALLY want to make loads o' money, save a little cash and play the Stalk
Market. Just like in America, you don't get rich in Animal Crossing by working.

Most importantly, don't be like me and try to optimize every detail. Just play
the game and have fun.
"
20,Lizzip/animal_crossing_checklist,JavaScript,"# animal_crossing_checklist
Bug and Fish checklist for tracking progress in Animal Crossing: New Horizons

Hosted at my [personal website](http://magicsheepgames.co.uk/animalcrossing.html)"
21,t238wang/AnimalCrossingHelper,JavaScript,"# AnimalCrossingHelper
## Feature(s) available now:
My initial goal is to make this app a ""swiss army knife"" app
### Fishing Index
Having the exact ordering of the fishing index in app so it's super easy to cross-reference with your own record. The checkmark will show what fish are available for you. Good luck fishers.
![fishing index screenshot](screenshots/fish.jpg)

## Features I will be working on:
1. Turnips trading dashboard, where app shows a list of users' turnips price and their islands' access code so villigers can find the best island to sell their turnips.
2. QR code generator. Generate QR code by importing pictures.

## Featires I might be working on(please please contribute to it)
1. add southern hemisphere info for fishing index
2. add English/other languages for index
3. add other index, such as bugs, villagers, npcs, ... etc

## Where can I download this app?
### Android
https://exp-shell-app-assets.s3.us-west-1.amazonaws.com/android/%40t238wang/acnh-helper-854de302af2c4a0794269f00ff19a5a9-signed.apk

### iOS
please clone this repo, register expo, run expo yourself. 

## Supported/Tested devices
This app works on OnePlus7Pro and iPads. I know this won't work on some smaller devices because they nasty way I organize UI. I will fix when I got a chance, or, please contribute.

"
22,leilaapsilva/AnimalCrossingMemoryGame,JavaScript,"# Animal Crossing - Memory Game
## Jogo da mem√≥ria baseado em Animal Crossing

### Cards com imagens dos [amiibos](https://animal-crossing.com/amiibo/collections/series-1-4-amiibo-cards) do jogo

Jogue em:
[leilaapsilva.github.io/AnimalCrossingMemoryGame](leilaapsilva.github.io/AnimalCrossingMemoryGame)



![Imagem do jogo](img/printscreen.png)

Atualizado em 16/07/20

TO DO: Deixar o jogo de forma gen√©rica, de modo que possam ser criados jogos da mem√≥ria de outros temas
"
23,Soryyyn/Critterpedia,Vue,"<p align=""center"">
  <img src=""https://raw.githubusercontent.com/soryyyn/critterpedia/master/assets/titleSprite.png"" width=""600"" title=""titleCard"">
</p>

---

I'm aiming to make catching all the creatures in Animal Crossing: New Horizons easier for everyone with this project! It (currently) shows all fish & bugs but if more are added I'm happy to add them to the website/project! If you sign up, you'll also be able to save, favorite and see if the current creature is available to catch!

<br>

## üå± What technologies am I using for this project?
This project uses the awesome Animal Crossing API: http://acnhapi.com. It makes all creatures and more available, and so it makes it easier to maintain this project!

It is also made with the Vue.js framework to make it a SPA, a Mongo Database and more! I'm open to answer questions!

<br>

## üçë What are my future plans with this project?
I'm looking to keep this project up to date at all times, or maybe as long as the game or the community keep this game alive! If you would like to help me support this project or more of my future projects, it would be awesome if you'd buy me a [hot chocolate](https://www.buymeacoffee.com/soryn) or donate directly through [PayPal](https://www.paypal.me/soryyyn) to help keep this project free for as many people as possible!
"
24,714589373/AnimalCrossingUnity,C#,"# AnimalCrossingUnity
An Animal Crossing Fanproject
"
25,custardplanet/villager-bot,Python,
26,maryehuerta/animal-crossing-music,JavaScript,"# Animal Crossing Music

## Background 
Music web-app that plays 24 hour *Animal Crossing New Leaf* music. Each hour there is a different song played corresponding to the song being played in that hour of Animal Crossing.

This was create for me to learn more about React and understand css more. Definately not complete but I'll add on every once in a while.

## History 
### Janurary 2018 
* New Earth! Created with Affinity Designer üåè
* Characters and Bugs added üê∂ üêõ
![alt text](https://github.com/maryehuerta/animal-crossing-music/raw/master/screenshots/Screen%20Shot%202018-01-11%20at%204.57.09%20PM.png ""Changes from 2018"")

### September 2017  
* Added Music üé∂
* Cloud animations ‚òÅÔ∏è ‚òÅÔ∏è ‚òÅÔ∏è
![alt text](https://github.com/maryehuerta/animal-crossing-music/raw/master/screenshots/Screen%20Shot%202017-09-22%20at%2011.36.26%20AM.png ""Changes from October 2017"")



"
27,theastropath/turbot,Python,"<img align=""right"" src=""https://raw.githubusercontent.com/theastropath/turbot/master/turbot.png"" />

# Turbot

[![build][build-badge]][build]
[![pypi][pypi-badge]][pypi]
[![python][python-badge]][python]
[![codecov][codecov-badge]][codecov]
[![black][black-badge]][black]
[![mit][mit-badge]][mit]

A Discord bot for everything _Animal Crossing: New Horizons_.

## üì± Using Turbot

Once you've connected the bot to your server, you can interact with it over
Discord via the following commands in any of the authorized channels.

- `!about`: Get information about Turbot
- `!help`: Provides detailed help about all of the following commands
- `!export`: Send a DM with all the data Turbot has associated with you

### üí∏ Turnips

![predictions](https://user-images.githubusercontent.com/1903876/82263275-63730000-9917-11ea-94d1-38661784097c.png)

These commands help users buy low and sell high in the stalk market.

- `!best`: Look for the current best sell or buy
- `!buy`: Save a buy price
- `!clear`: Clear your price data
- `!graph`: Graph price data
- `!history`: Get price history
- `!lastweek`: Get graph for last week's price data
- `!oops`: Undo the last price data
- `!predict`: Predict your price data for the rest of the week
- `!reset`: Reset all users' data
- `!sell`: Save a sell price

### ‚ÑπÔ∏è User Preferences

![user-info](https://user-images.githubusercontent.com/1903876/82263272-61a93c80-9917-11ea-9e8c-ded5eb1f652e.png)

These commands allow users to set their preferences. These preferences are used
to make other commands more relevant, for example by converting times to the
user's preferred timezone.

- `!info`: Get a user's information
- `!pref`: Set a user preference; use command to get a list of available options

### üìÆ Collectables

![collecting](https://user-images.githubusercontent.com/1903876/82263264-5f46e280-9917-11ea-9c1e-90d4077013ca.png)

When a community of users tracks collectables and trades them between each
other, everyone finishes collecting everything in the game so much more quickly
than they would on their own. Turbot supports collecting:

- ü¶¥ Fossils
- üêû Bugs
- üêü Fish
- üñºÔ∏è Art
- üé∂ Songs

#### üìà Managing your Collection

- `!collect`: Mark something as collected
- `!collected`: Show the things you've collected so far
- `!count`: Count the number of collected things you have
- `!needed`: Find out what collectables are needed by you and others
- `!search`: Search for someone who needs something you're looking to give away
- `!uncollect`: Remove something from your collection
- `!uncollected`: Get a list of things that you haven't collected yet

#### ü§î Helper Utilities

Some collections require additional support such as the `!art` command that
helps users tell fake art from real art. The `!bugs` and `!fish` commands
tell users when and where to catch those critters. These commands also know what
you've already collected and will tailor their responses to the user.

- `!art`: Get information on an art piece
- `!bugs`: Get information on bugs
- `!fish`: Get information on fish
- `!new`: Get information on newly available fish and bugs

### üëë Administration

- `!authorize`: Configure which channels Turbot can operate in

## ü§ñ Running Turbot

First install `turbot` using [`pip`](https://pip.pypa.io/en/stable/):

```shell
pip install turbot
```

Then you must configure two things:

1. Your Discord bot token.
2. The list of channels you want `turbot` to monitor. (Default: All channels)

To provide your Discord bot token either set an environment variable named
`TURBOT_TOKEN` to the token or paste it into a file named `token.txt`.

For the list of channels you can provide channel names on the command line using
any number of `--channel ""name""` options. Alternatively you can create a file
named `channels.txt` where each line of the file is a channel name. You can
also specify them via the environment variable `TURBOT_CHANNELS` as a semicolon
delimited string, for example: `export TURBOT_CHANNELS=""some;channels;here""`.
You can also leave this unspecified and Turbot will operate within all channels,
then you can specify a smaller set of channels using the `!authorize` command.

By default Turbot will use sqlite3 as its database. You can however choose to
use another database by providing a [SQLAlchemy Connection URL][db-url]. This
can be done via the `--database-url` command line option or the environment
variable `TURBOT_DB_URL`. Note that, at the time of this writing, Turbot is only
tested against sqlite3 and PostgreSQL.

More usage help can be found by running `turbot --help`.

## ‚öõÔ∏è Heroku Support

Turbot supports deployment to Heroku out of the box. All you need is your
Discord bot token and you're ready to go! Just click the Deploy to Heroku
button, below.

[![Deploy](https://www.herokucdn.com/deploy/button.svg)][deploy]

For more details see [our documentation on Heroku support](HEROKU.md).

## üê≥ Docker Support

You can also run Turbot via docker. See
[our documentation on Docker Support](DOCKER.md) for help.

## ‚ù§Ô∏è Contributing

If you'd like to become a part of the Turbot development community please first
know that we have a documented [code of conduct](CODE_OF_CONDUCT.md) and then
see our [documentation on how to contribute](CONTRIBUTING.md) for details on
how to get started.

---

[MIT][mit] ¬© [TheAstropath][theastropath], [lexicalunit][lexicalunit] et [al][contributors]

[black-badge]:      https://img.shields.io/badge/code%20style-black-000000.svg
[black]:            https://github.com/psf/black
[build-badge]:      https://github.com/theastropath/turbot/workflows/build/badge.svg
[build]:            https://github.com/theastropath/turbot/actions
[codecov-badge]:    https://codecov.io/gh/theastropath/turbot/branch/master/graph/badge.svg
[codecov]:          https://codecov.io/gh/theastropath/turbot
[contributors]:     https://github.com/theastropath/turbot/graphs/contributors
[db-url]:           https://docs.sqlalchemy.org/en/latest/core/engines.html
[deploy]:           https://heroku.com/deploy
[lexicalunit]:      http://github.com/lexicalunit
[mit-badge]:        https://img.shields.io/badge/License-MIT-yellow.svg
[mit]:              https://opensource.org/licenses/MIT
[pypi-badge]:       https://img.shields.io/pypi/v/turbot
[pypi]:             https://pypi.org/project/turbot/
[python-badge]:     https://img.shields.io/badge/python-3.7+-blue.svg
[python]:           https://www.python.org/
[theastropath]:     https://github.com/theastropath
"
28,punctuations/ac,JavaScript,"# Animal Crossing Time üçÉ

<a href=""https://www.producthunt.com/posts/ac?utm_source=badge-featured&utm_medium=badge&utm_souce=badge-ac"" target=""_blank""><img src=""https://api.producthunt.com/widgets/embed-image/v1/featured.svg?post_id=279749&theme=dark"" alt=""ac - Animal Crossing music depending on the local time & weather! | Product Hunt"" style=""width: 250px; height: 54px;"" width=""250"" height=""54"" /></a>

Animal Crossing Time is a simple site inspired by [crossingti.me](https://crossingti.me) that plays different Animal Crossing songs depending on the time! It is currently in beta so please know that there **will** be bugs, if you happen to find some please either create an issue, or reach out ot me on [twitter](https://twitter.com/wwwdotca) or [discord](https://discord.gg/ASuqg75pAP).

#### üìù Have suggestions?

Feel free to leave suggestions in the [discussions](https://github.com/punctuations/ac/discussions) or contact me with suggestions you have to better this project and make it stand out! You can contact me with the methods stated above.

#### üöÄ I cloned the repo how do I run a development server?

Start with:

```bash
npm i
```

Then start up the development server:

```bash
npm run dev
# or
yarn dev
```

Open your browser and go to [localhost:3000](http://localhost:3000)!

#### ‚ùî What's Next.js?

Next.js is a react framework for production.

**You can learn more about Next.js with the links below:**

- [Next.js Documentation](https://nextjs.org/docs) - learn about Next.js features and API.
- [Learn Next.js](https://nextjs.org/learn) - an interactive Next.js tutorial.
"
29,han-jinkyu/animal-crossing-turnip,JavaScript,"# animal-crossing-turnip
Í≤åÏûÑ 'ÎèôÎ¨ºÏùò Ïà≤'Ïùò Î¨¥ Í∞ÄÍ≤©ÏùÑ ÏòàÏ∏°ÌïòÎäî ÏÇ¨Ïù¥Ìä∏

A site that predicts turnip prices of Game 'Animal Crossing'

https://animal-crossing-turnip.web.app

## Tech stack
### Language
- Node.js (v13.12.0)

### Backend
- Firebase

### Frontend
- Vue.js
- Bootstrap 4

## References
https://gist.github.com/Treeki/85be14d297c80c8b3c0a76375743325b
"
